{"version":3,"sources":["assets/profilePic.png","assets/logo.png","../node_modules/@trust/webcrypto/src/algorithms sync","model/User.js","network/PodFolderBuilder.js","network/SolidCommunicatorBuilder.js","network/SolidCommunicator.js","routes/page/Home.js","routes/page/LogIn.js","routes/page/Groups.js","routes/page/Friends.js","routes/page/FriendPage.js","routes/page/CheckIns.js","routes/page/BeerResults.js","routes/page/Profile.js","routes/page/User.js","routes/page/BeerDetailScreen.js","routes/AppRoutes.js","component/NavBar.js","App.js","serviceWorker.js","index.js","assets/Knipsel.png"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","User","uri","this","_uri","_name","undefined","_imageUrl","_beginDate","_beerPoints","_friends","_subscribers","map","subscriber","update","push","filter","subscriberList","newFriends","concat","upDateSubScribers","name","imageUrl","beerPoints","beginDate","index","console","log","Date","getTime","fileClient","require","authClient","rdflib","SOLID","Namespace","VCARD","TERMS","RDF","SOLIDLINKEDBEER","FOAF","ACL","appName","buildFolders","publicProfileIndex","storePublicProfileIndex","storagePublic","app","webId","a","createAppNodeForPublicTypeIndex","applocation","makeAppFolderStructure","checkFolderIntegrity","store","publicTypeIndex","publicLocation","findEmptyFolder","appLocation","appLocationNN","sym","add","serialize","value","newTTLpublicTypeindex","putSolidFile","fetch","status","makeRandomString","length","result","characters","charactersLength","i","charAt","Math","floor","random","appFolderUrl","aclUrl","createFolder","body","getAclAppFolder","beerDrinkerUrl","getFriendsFile","friendsUrl","postSolidFile","getAppDataInit","getACLInboxFolder","inboxUrl","inboxUrlacl","reviewUrlacl","reviewUrl","getACLCheckInFolder","url","graph","bn","blankNode","appUrl","webIdUserLoggedIn","owner","agent","urlFile","friendsgroup","friendsgroupRequested","_public","inbox","ciUrl","group1","ci","fgroup1","fgroup2","folder","filename","method","headers","rdfLib","PIM","buildSolidCommunicator","user","returnObject","webIdNN","getWebId","getUserCard","storeProfileCard","getPPILocation","ppiObject","getStorePublic","getApplicationLocation","ppi","applicationLocation","getUserDetails","getAppData","appData","getFriends","friends","profile","nameFN","any","imageURL","webIdUrl","profileCardTTl","parse","storePublicTypeIndex","publicTypeIndexTTL","appQuery","appdataLocation","readFile","appdatattl","startdate","points","friendsLocation","ttlFriends","group","query","each","fetchFriend","friend","SolidCommunicator","values","subscribe","setName","setImageUrl","addFriends","setBeerPoints","setBeginDate","solidCommunicator","Home","className","src","Knipsel","alt","style","color","React","Component","LogIn","props","onChangeCheckBox","setState","loginAsBrewer","state","onButtonClick","solidAuth","popupLogin","popupUri","then","currentSession","session","onLoggedIn","history","typeLogIn","type","onChange","onClick","href","Groups","Friends","inputText","target","getUserFile","res","error","pathname","friendsElements","key","to","placeholder","FriendPage","getFriendFromIndex","match","params","BeerResults","list","elements","listItem","onLinkClick","Profile","imgUrl","getImageUrl","getName","profilePic","date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","dateToString","getBeginDate","getBeerPoints","location","BeerDetailScreen","AppRoutes","exact","path","component","isLoggedIn","loggedIn","UserPage","userObject","FriendsPage","clearSearchQuery","CheckIns","Inbox","PrivateRoute","rest","render","PrivateRouteLogIn","withRouter","NavBar","onInput","onBeerSearch","input","cldn","Children","toArray","children","child","searchQuery","onSearchBarButtonClick","App","checkLoggedIn","build","obj","onClickLogOut","logout","text","goBack","navBar","Logo","Boolean","window","hostname","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d44f7da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilePic.b6681619.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.bc392ac4.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 425;","class User {\r\n    constructor(uri){\r\n        this._uri = uri\r\n\r\n        this._name = undefined;\r\n        this._imageUrl = undefined;\r\n        this._beginDate = undefined;\r\n        this._beerPoints = 0;\r\n        this._friends = [];\r\n\r\n        //mvc\r\n        this._subscribers = [];\r\n    }\r\n\r\n    upDateSubScribers(){\r\n        this._subscribers.map(subscriber => subscriber.update());\r\n    }\r\n\r\n    subscribe(subscriber){\r\n        this._subscribers.push(subscriber);\r\n    } \r\n\r\n    unsubscribe(subscriber){\r\n        this._subscribers.filter(subscriberList  => {\r\n            return subscriberList !== subscriber;\r\n        });\r\n    }\r\n\r\n    addFriends(newFriends){\r\n        this._friends.concat(newFriends)\r\n        this.upDateSubScribers();\r\n    }\r\n\r\n    setName(name){\r\n        this._name = name;\r\n    }\r\n\r\n    setImageUrl(imageUrl){\r\n        this._imageUrl = imageUrl;\r\n    }\r\n\r\n    setBeerPoints(beerPoints){\r\n        this._beerPoints = beerPoints;\r\n        this.upDateSubScribers();\r\n    }\r\n\r\n    setBeginDate(beginDate){\r\n        this._beginDate = beginDate;\r\n        this.upDateSubScribers();\r\n    }\r\n\r\n    getWebId(){\r\n        return this._uri;\r\n    }\r\n\r\n    getFriends(){\r\n        return this._friends;\r\n    }\r\n\r\n    getFriendFromIndex(index){\r\n        return this._friends[index];\r\n    }\r\n\r\n    getBeginDate(){\r\n        console.log(this.beginDate);\r\n        return  new Date(this._beginDate.getTime());\r\n    }\r\n\r\n    getImageUrl(){\r\n        return this._imageUrl;\r\n    }\r\n\r\n    getName(){\r\n        return this._name;\r\n    }\r\n\r\n    getBeerPoints(){\r\n        return this._beerPoints;\r\n    }\r\n\r\n}\r\n\r\nexport default User;","const fileClient = require('solid-file-client');\r\nconst authClient = require('solid-auth-client');\r\nconst rdflib = require('rdflib');\r\n\r\nconst SOLID = rdflib.Namespace( \"http://www.w3.org/ns/solid/terms#\");\r\nconst VCARD = rdflib.Namespace(\"http://www.w3.org/2006/vcard/ns#\");\r\nconst TERMS = rdflib.Namespace('http://purl.org/dc/terms/');\r\nconst RDF = rdflib.Namespace(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\");\r\nconst SOLIDLINKEDBEER = rdflib.Namespace('https://ozcanseker.inrupt.net/solidlinkedbeer#');\r\nconst FOAF = rdflib.Namespace('http://xmlns.com/foaf/0.1/');\r\nconst ACL = rdflib.Namespace(\"http://www.w3.org/ns/auth/acl#\");\r\n\r\nconst appName = \"sociallinkedbeer\";\r\n\r\nexport async function buildFolders(publicProfileIndex, storePublicProfileIndex, storagePublic, app, webId){\r\n  //TODO a whole lot of error checking. Checking for 400 error codes and stuff like that\r\n  let applocation = await createAppNodeForPublicTypeIndex(storePublicProfileIndex, publicProfileIndex, storagePublic, app);\r\n  await makeAppFolderStructure(applocation, webId);\r\n\r\n  return applocation;\r\n}\r\n\r\nexport async function checkFolderIntegrity(){\r\n    //TODO Check integrity\r\n    console.log(\"TODO checkFolderIntegrity\");\r\n}\r\n\r\nasync function createAppNodeForPublicTypeIndex(store, publicTypeIndex, publicLocation, app){\r\n    let appLocation = await findEmptyFolder(publicLocation);\r\n        \r\n    let appLocationNN = rdflib.sym(appLocation);\r\n    \r\n    store.add(publicTypeIndex, TERMS('references'), app);\r\n    store.add(app, RDF('type'), SOLID('TypeRegistration'));\r\n    store.add(app, SOLID('instance'), appLocationNN);\r\n    \r\n    let newTTLpublicTypeindex = await rdflib.serialize(undefined, store, publicTypeIndex.value, 'text/turtle');\r\n    await putSolidFile(publicTypeIndex.value, newTTLpublicTypeindex); \r\n \r\n    return appLocation;\r\n}\r\n\r\nasync function findEmptyFolder(publicLocation){\r\n  //TODO improve this. You can check if the other folder holds up to your standards. A lot of possibilities\r\n\r\n  let appLocation = publicLocation + appName + '/'\r\n\r\n  let res = await authClient.fetch(appLocation);\r\n  if(res.status % 400 < 100){\r\n    return appLocation;\r\n  }else{\r\n    return appLocation = publicLocation + appName + makeRandomString(10) +'/'\r\n  }\r\n}\r\n\r\nfunction makeRandomString(length) {\r\n  var result           = '';\r\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  var charactersLength = characters.length;\r\n  for ( var i = 0; i < length; i++ ) {\r\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} appFolderUrl \r\n * @param {string} webId \r\n */\r\nasync function makeAppFolderStructure(appFolderUrl, webId){\r\n  //TODO make all async\r\n  let body;\r\n    \r\n  //top folder\r\n  let aclUrl = appFolderUrl + '.acl';\r\n\r\n  await fileClient.createFolder(appFolderUrl);\r\n  body = getAclAppFolder(appFolderUrl, aclUrl, webId);\r\n  await putSolidFile(aclUrl , body);\r\n\r\n  //beerdrinker\r\n  let beerDrinkerUrl = appFolderUrl + \"beerdrinker/\";\r\n  await fileClient.createFolder(beerDrinkerUrl);\r\n\r\n  // friends\r\n  let friendsUrl = beerDrinkerUrl + 'friends.ttl';\r\n  body = getFriendsFile(friendsUrl, webId);\r\n\r\n  await postSolidFile(beerDrinkerUrl, 'friends' ,body);\r\n  \r\n  //appData \r\n  let appDataFile = beerDrinkerUrl + 'appdata.ttl';\r\n  body = getAppDataInit(appDataFile);\r\n  await postSolidFile(beerDrinkerUrl,'appdata' ,body);\r\n  \r\n  //inboxfolder\r\n  let inboxUrl = beerDrinkerUrl + 'inbox/';\r\n  let inboxUrlacl = inboxUrl + '.acl';   \r\n  body = getACLInboxFolder(inboxUrl, inboxUrlacl, webId);\r\n\r\n  await fileClient.createFolder(inboxUrl);\r\n  await putSolidFile(inboxUrlacl, body);\r\n\r\n  //check in folder        \r\n  let reviewUrl = beerDrinkerUrl + 'checkins/';\r\n  let reviewUrlacl = reviewUrl + '.acl';\r\n\r\n  await fileClient.createFolder(reviewUrl);\r\n  body = getACLCheckInFolder(reviewUrl, reviewUrlacl, webId, friendsUrl);\r\n  await putSolidFile(reviewUrlacl, body);                     \r\n}\r\n\r\n\r\nfunction getAppDataInit(url){\r\n  let graph = rdflib.graph();\r\n  \r\n  let bn = rdflib.blankNode();\r\n\r\n  graph.add(bn, SOLIDLINKEDBEER('startdate'), new Date());\r\n  graph.add(bn, SOLIDLINKEDBEER('points'), 0);\r\n\r\n  let ttl = rdflib.serialize(undefined, graph, url, 'text/turtle');\r\n  return ttl;\r\n}\r\n\r\nfunction getAclAppFolder(appUrl, aclUrl, webIdUserLoggedIn){\r\n  let graph = rdflib.graph();\r\n  let owner = rdflib.sym(aclUrl + \"#Owner\");\r\n  let app = rdflib.sym(appUrl);\r\n  let agent = rdflib.sym(webIdUserLoggedIn);\r\n\r\n  graph.add(owner, RDF('type'), ACL('Authorization'));\r\n  \r\n  graph.add(owner, ACL('accessTo'), app);\r\n  graph.add(owner, ACL('default'), app);  \r\n  graph.add(owner, ACL('agent'), agent);\r\n \r\n  graph.add(owner, ACL('mode'), ACL('Control'));\r\n  graph.add(owner, ACL('mode'), ACL('Read'));\r\n  graph.add(owner, ACL('mode'), ACL('Write'));\r\n\r\n  return rdflib.serialize(undefined, graph, aclUrl, 'text/turtle');\r\n}\r\n\r\nfunction getFriendsFile(urlFile, webId){\r\n  let graph = rdflib.graph();\r\n\r\n  let friendsgroup = rdflib.sym(urlFile + \"#Friends\");\r\n  let friendsgroupRequested = rdflib.sym(urlFile + \"#FriendsRequested\");\r\n\r\n  graph.add(friendsgroup, RDF('type'), VCARD('Group'));\r\n  graph.add(friendsgroup, VCARD('hasUID'), rdflib.sym(\"urn:uuid:8831CBAD-1111-2222-8563-F0F4787E5398:ABGroup\"));\r\n\r\n  graph.add(friendsgroupRequested, RDF('type'), VCARD('Group'));\r\n  graph.add(friendsgroupRequested, VCARD('hasUID'), rdflib.sym(\"urn:uuid:8831CBAD-1111-2222-8563-F0F4787E5398:CDGroup\"));\r\n\r\n  return rdflib.serialize(undefined, graph, urlFile, 'text/turtle');\r\n}\r\n\r\nfunction getACLInboxFolder(inboxUrl, aclUrl, webIdUserLoggedIn){\r\n  let graph = rdflib.graph();\r\n  let owner = rdflib.sym(aclUrl + \"#Owner\");\r\n  let _public = rdflib.sym(aclUrl + \"#Public\");\r\n  let inbox = rdflib.sym(inboxUrl);\r\n  let agent = rdflib.sym(webIdUserLoggedIn);\r\n  \r\n  //owner\r\n  graph.add(owner, RDF('type'), ACL('Authorization'));\r\n  \r\n  graph.add(owner, ACL('accessTo'), inbox);\r\n  graph.add(owner, ACL('default'), inbox);  \r\n  graph.add(owner, ACL('agent'), agent);\r\n \r\n  graph.add(owner, ACL('mode'), ACL('Control'));\r\n  graph.add(owner, ACL('mode'), ACL('Read'));\r\n  graph.add(owner, ACL('mode'), ACL('Write'));\r\n\r\n  //public\r\n  graph.add(_public, RDF('type'), ACL('Authorization'));\r\n  \r\n  graph.add(_public, ACL('accessTo'), inbox);\r\n  graph.add(_public, ACL('default'), inbox);  \r\n  graph.add(_public, ACL('agentClass'), FOAF(\"Agent\"));\r\n \r\n  graph.add(_public, ACL('mode'), ACL('Append'));\r\n\r\n  return rdflib.serialize(undefined, graph, aclUrl, 'text/turtle');\r\n}\r\n\r\nfunction getACLCheckInFolder(ciUrl, aclUrl, webIdUserLoggedIn, friendsUrl){\r\n  let graph = rdflib.graph();\r\n  let owner = rdflib.sym(aclUrl + \"#Owner\");\r\n  let group1 = rdflib.sym(aclUrl + \"#Friends\");\r\n  let ci = rdflib.sym(ciUrl);\r\n  let agent = rdflib.sym(webIdUserLoggedIn);\r\n\r\n  //group who get acess\r\n  let fgroup1 = rdflib.sym(friendsUrl + \"#Friends\");\r\n  let fgroup2 = rdflib.sym(friendsUrl + \"#FriendsRequested\"); \r\n  \r\n  //owner\r\n  graph.add(owner, RDF('type'), ACL('Authorization'));\r\n  \r\n  graph.add(owner, ACL('accessTo'), ci);\r\n  graph.add(owner, ACL('default'), ci);  \r\n  graph.add(owner, ACL('agent'), agent);\r\n \r\n  graph.add(owner, ACL('mode'), ACL('Control'));\r\n  graph.add(owner, ACL('mode'), ACL('Read'));\r\n  graph.add(owner, ACL('mode'), ACL('Write'));\r\n\r\n  //public\r\n  graph.add(group1, RDF('type'), ACL('Authorization'));\r\n  \r\n  graph.add(group1, ACL('accessTo'), ci);\r\n  graph.add(group1, ACL('default'), ci);  \r\n\r\n  graph.add(group1, ACL('agentGroup'), fgroup1);\r\n  graph.add(group1, ACL('agentGroup'), fgroup2);\r\n\r\n  graph.add(group1, ACL('mode'), ACL('Append'));\r\n \r\n  return rdflib.serialize(undefined, graph, aclUrl, 'text/turtle');\r\n}\r\n\r\nasync function postSolidFile(folder, filename , body){\r\n  authClient.fetch(folder, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'text/turtle',\r\n      'Link': '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"',\r\n      'SLUG' : filename\r\n    },\r\n    body : body\r\n});\r\n}\r\n\r\nasync function putSolidFile(url, body){\r\n  authClient.fetch(url, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'text/turtle'      \r\n      },\r\n      body: body\r\n});\r\n}","import { buildFolders, checkFolderIntegrity } from './PodFolderBuilder'\r\n\r\nconst fileClient = require('solid-file-client');\r\nconst authClient = require('solid-auth-client');\r\nconst rdfLib = require('rdflib');\r\n\r\nconst SOLID = rdfLib.Namespace( \"http://www.w3.org/ns/solid/terms#\");\r\nconst VCARD = rdfLib.Namespace(\"http://www.w3.org/2006/vcard/ns#\");\r\nconst TERMS = rdfLib.Namespace('http://purl.org/dc/terms/');\r\nconst RDF = rdfLib.Namespace(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\");\r\nconst SOLIDLINKEDBEER = rdfLib.Namespace('https://ozcanseker.inrupt.net/solidlinkedbeer#');\r\nconst FOAF = rdfLib.Namespace('http://xmlns.com/foaf/0.1/');\r\nconst ACL = rdfLib.Namespace(\"http://www.w3.org/ns/auth/acl#\");\r\nconst PIM = rdfLib.Namespace(\"http://www.w3.org/ns/pim/space#\");\r\n\r\n\r\nexport async function buildSolidCommunicator(user){\r\n  //TODO do some thing parallel\r\n    let returnObject = {};\r\n\r\n    //make a named node of the session webid of the user\r\n    //namednode\r\n    const webIdNN = rdfLib.sym(user.getWebId());\r\n\r\n    //get a store of the profile card of the logged in user\r\n    //store\r\n    let storeProfileCard = await getUserCard(webIdNN.uri);\r\n     \r\n    //store for the Public Profile Index\r\n    //object with store and nn\r\n    let ppiObject = await getPPILocation(webIdNN, storeProfileCard);\r\n\r\n    //String that shows the location of the public storage of the pod\r\n    //string \r\n    let storagePublic = await getStorePublic(webIdNN, storeProfileCard);     \r\n\r\n    //locatie voor de applicatie\r\n    //string\r\n    let applicationLocation = await getApplicationLocation(ppiObject.ppi , ppiObject.store, storagePublic, webIdNN.value);\r\n\r\n    returnObject.user = getUserDetails(webIdNN, storeProfileCard);\r\n    let appData = await getAppData(applicationLocation);\r\n\r\n    returnObject.user = {...returnObject.user , ...appData};\r\n    returnObject.user.friends = await getFriends(applicationLocation);\r\n\r\n    return returnObject;\r\n}\r\n\r\nfunction getUserDetails(profile, storeProfileCard){\r\n  let nameFN =  storeProfileCard.any(profile,VCARD('fn'));\r\n  let imageURL =  storeProfileCard.any(profile,VCARD('hasPhoto')); \r\n\r\n  nameFN = nameFN ? nameFN.value : undefined;\r\n  imageURL = imageURL ? imageURL.value : undefined;\r\n\r\n  return {name: nameFN, imageURL: imageURL};\r\n}\r\n\r\nasync function getUserCard(webIdUrl){\r\n    const profileCardTTl = await fileClient.fetch(webIdUrl); \r\n    const storeProfileCard = rdfLib.graph(); \r\n    rdfLib.parse(profileCardTTl, storeProfileCard, webIdUrl, \"text/turtle\");\r\n    \r\n    return storeProfileCard;\r\n}\r\n\r\nasync function getPPILocation(profile, storeProfileCard){\r\n    const publicProfileIndex = storeProfileCard.any(profile, SOLID(\"publicTypeIndex\"));\r\n    \r\n    const storePublicTypeIndex = rdfLib.graph();\r\n    const publicTypeIndexTTL = await fileClient.fetch(publicProfileIndex.value);\r\n    rdfLib.parse(publicTypeIndexTTL, storePublicTypeIndex, publicProfileIndex.value, \"text/turtle\");\r\n    \r\n    return {store : storePublicTypeIndex, ppi : publicProfileIndex};\r\n}\r\n\r\nfunction getStorePublic(profile, storeProfileCard){\r\n    let locationStorage = storeProfileCard.any(profile, PIM(\"storage\"));\r\n    return locationStorage.value + \"public/\";\r\n}\r\n\r\nasync function getApplicationLocation(publicProfileIndex, storePublicProfileIndex, storagePublic, webId){\r\n    let app = rdfLib.sym(publicProfileIndex.value + \"#SocialLinkedBeer\");\r\n    let appQuery = storePublicProfileIndex.any(app, SOLID(\"instance\"));\r\n\r\n    if(appQuery){\r\n      checkFolderIntegrity();\r\n      return appQuery.value;\r\n    }else{\r\n        let applocation = await buildFolders(publicProfileIndex, storePublicProfileIndex, storagePublic, app, webId);\r\n    }\r\n}\r\n\r\nasync function getAppData(url){\r\n  //TODO one place to save all urls\r\n  let appdataLocation = url + 'beerdrinker/' +'appdata.ttl';\r\n\r\n  let appdatattl = await fileClient.readFile(appdataLocation);\r\n  let graph = rdfLib.graph();\r\n  rdfLib.parse(appdatattl, graph, appdataLocation, \"text/turtle\");\r\n\r\n  let blankNode = graph.any(undefined, SOLIDLINKEDBEER('startdate'));\r\n\r\n  let startdate = graph.any(blankNode, SOLIDLINKEDBEER('startdate'));\r\n  let points = graph.any(blankNode, SOLIDLINKEDBEER('points'));\r\n  \r\n  return {startdate: startdate.value, points: points.value}\r\n}\r\n\r\n async function getFriends(applicationLocation){\r\n  let friendsLocation = applicationLocation + 'beerdrinker/' +  \"friends.ttl\";\r\n  let ttlFriends = await fileClient.readFile(friendsLocation);\r\n  let group = rdfLib.sym(friendsLocation + \"#Friends\");\r\n\r\n  let friends = [];\r\n\r\n  let graph = rdfLib.graph();\r\n  rdfLib.parse(ttlFriends, graph, friendsLocation, \"text/turtle\");\r\n\r\n  let query = graph.each(group, VCARD('hasMember'), undefined); \r\n\r\n  for (let index = 0; index < query.length; index++) {\r\n    let friend = await this.fetchFriend(query[index]);\r\n    friends.push(friend);\r\n  }\r\n\r\n  return friends;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//   async function fetchFriend(friendNamedNode){\r\n//     let friendttl = await fileClient.readFile(friendNamedNode.value);\r\n//     let graph = rdfLib.graph();\r\n//     rdfLib.parse(friendttl, graph, friendNamedNode.value, \"text/turtle\");\r\n\r\n//     let nameFN =  graph.any(friendNamedNode, VCARD('fn'));\r\n//     let imageURL =  graph.any(friendNamedNode, VCARD('hasPhoto')); \r\n\r\n//     nameFN = nameFN ? nameFN.value : undefined;\r\n//     imageURL = imageURL ? imageURL.value : undefined;\r\n\r\n//     return new Friend(friendNamedNode.value, nameFN, imageURL);\r\n//   }\r\n\r\n//   function makeUser(profile, storeProfileCard, friends, appdata){\r\n//       let nameFN =  storeProfileCard.any(profile,VCARD('fn'));\r\n//       let imageURL =  storeProfileCard.any(profile,VCARD('hasPhoto')); \r\n\r\n//       nameFN = nameFN ? nameFN.value : undefined;\r\n//       imageURL = imageURL ? imageURL.value : undefined;\r\n\r\n//       return new User(profile.value, nameFN, imageURL, friends, appdata.startdate , appdata.points);\r\n//   }\r\n\r\n ","import User from '../model/User'\r\nimport Friend from '../model/Friend'\r\nimport { buildFolders, checkFolderIntegrity } from './PodFolderBuilder'\r\nimport { buildSolidCommunicator } from './SolidCommunicatorBuilder'\r\n\r\nconst fileClient = require('solid-file-client');\r\nconst authClient = require('solid-auth-client');\r\nconst rdfLib = require('rdflib');\r\n\r\nconst SOLID = rdfLib.Namespace( \"http://www.w3.org/ns/solid/terms#\");\r\nconst PIM = rdfLib.Namespace(\"http://www.w3.org/ns/pim/space#\");\r\nconst VCARD = rdfLib.Namespace(\"http://www.w3.org/2006/vcard/ns#\");\r\nconst TERMS = rdfLib.Namespace('http://purl.org/dc/terms/');\r\nconst RDF = rdfLib.Namespace(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\");\r\nconst SOLIDLINKEDBEER = rdfLib.Namespace('https://ozcanseker.inrupt.net/solidlinkedbeer#');\r\nconst FOAF = rdfLib.Namespace('http://xmlns.com/foaf/0.1/');\r\n\r\nclass SolidCommunicator {\r\n    constructor(user, values){\r\n      \r\n      //user\r\n      this.user = user;\r\n      user.subscribe(this);\r\n    }\r\n\r\n    static async build(user){\r\n      let values = await buildSolidCommunicator(user);\r\n      \r\n      console.log(values);\r\n      user.setName(values.user.name);\r\n      user.setImageUrl(values.user.imageURL);\r\n      user.addFriends(values.user.friends);\r\n      user.setBeerPoints(values.user.points);\r\n      user.setBeginDate(new Date(values.user.startdate));\r\n      \r\n      //make new solidCommunicator\r\n      let solidCommunicator = new SolidCommunicator(user, values);\r\n\r\n      return solidCommunicator;\r\n    }  \r\n\r\n    update(){\r\n      console.log(\"update\");\r\n    }\r\n}\r\n\r\nasync function appendSolidResource(url, body){\r\n  authClient.fetch(url, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Content-Type': 'application/sparql-update'\r\n    },\r\n    body : body\r\n  });\r\n\r\n    // let body = `INSERT DATA { <${this.state.webId+\"#comment\"}> <${SOLIDLINKEDBEER('points6').value}> <${8}> }`;\r\n    // let appDataFile;\r\n    // appendSolidResource(appDataFile, {body})\r\n}\r\n\r\nasync function getUserFile(url, callBack){\r\n  let userttt = await fileClient.readFile(url);\r\n  let graph = rdfLib.graph();\r\n\r\n  try{\r\n    rdfLib.parse(userttt, graph, url, \"text/turtle\");\r\n\r\n    let query = graph.any(undefined, undefined, FOAF('PersonalProfileDocument'));\r\n\r\n    if(query){\r\n      let profile = rdfLib.sym(url);\r\n      let nameFN =  graph.any(profile,VCARD('fn'));\r\n      let imageURL =  graph.any(profile,VCARD('hasPhoto')); \r\n\r\n      nameFN = nameFN ? nameFN.value : undefined;\r\n      imageURL = imageURL ? imageURL.value : undefined;\r\n      \r\n      let result = {\r\n        userTTl: userttt,\r\n        url : url,\r\n        name: nameFN,\r\n        imageUrl : imageURL\r\n      }\r\n\r\n      callBack(result, false);\r\n    }else{\r\n      callBack(undefined, \"not a profile card\");\r\n    }\r\n\r\n  }catch(err){\r\n    callBack(undefined, \"Not a linked data file\");\r\n  }    \r\n}\r\n\r\nexport default SolidCommunicator;\r\n\r\n// export default SolidCommunicator;\r\n\r\n// const SOLID = $rdf.Namespace( \"http://www.w3.org/ns/solid/terms#\");\r\n\r\n// const BEERCOUNTER = $rdf.Namespace(\"https://ozcanseker.inrupt.net/vocabulary#\");\r\n// const PIM = $rdf.Namespace(\"http://www.w3.org/ns/pim/space#\");\r\n\r\n// let BEERCOUNTERRECORD = $rdf.sym(\"https://ozcanseker.inrupt.net/vocabulary#BeerCounterRecord\");\r\n\r\n// class SolidCommuncator{\r\n\r\n//     /**\r\n//      * \r\n//      * @param {string} webid \r\n//      * @param {string} applocation \r\n//      * @param {store:rdflib} appStore \r\n//      * @param {BeerCounter} beerCounter \r\n//      */\r\n//     constructor(webid, applocation, appStore, beerCounter){\r\n//         this.webid = webid;\r\n//         this.applocation = applocation;\r\n//         this.appStore = appStore;\r\n\r\n//         //subscribe to model\r\n//         this.beerCounter = beerCounter;\r\n//         this.beerCounter.subscribe(this);\r\n        \r\n//         //for the networking\r\n//         this.queryList = [];\r\n//         this.networking = false;\r\n//     }\r\n\r\n//     update(){\r\n//         let query = {\r\n//             date : this.beerCounter.getDateToday(),\r\n//             amount : this.beerCounter.getBeerCount()\r\n//         }\r\n\r\n//         this.queryList.push(query);\r\n\r\n//         if(!this.networking){\r\n//             this.startSendingFile();\r\n//         }\r\n//     }\r\n\r\n//     async startSendingFile(){\r\n//         this.networking = true;\r\n\r\n//         while(this.queryList.length > 0){\r\n//             let query = this.queryList.shift();\r\n//             let date = query.date;\r\n//             let blankNode = this.appStore.any(null, null, stringToDate(date));\r\n\r\n//             if(blankNode){\r\n//                 let statment = this.appStore.any(blankNode, RDF('value'), null);   \r\n//                 statment.value = query.amount + \"\";     \r\n//             }else{ \r\n//                 blankNode = $rdf.blankNode();\r\n//                 this.appStore.add(blankNode, RDF('type'), BEERCOUNTER('BeerCounterRecord'));\r\n//                 this.appStore.add(blankNode, TERMS('created'), stringToDate(date));\r\n//                 this.appStore.add(blankNode, RDF('value'), query.amount);\r\n//             }\r\n//         }\r\n\r\n//         let appStoreTTL = await $rdf.serialize(undefined, this.appStore, 'text/turtle');\r\n//         console.log(this.applocation);\r\n//         await fileClient.updateFile(this.applocation, appStoreTTL);\r\n\r\n//         if(this.queryList.length > 0){\r\n//             this.startSendingFile();\r\n//         }else{\r\n//             this.networking = false;\r\n//         }\r\n//     }\r\n\r\n//     static async build(beerCounter){\r\n//         //get the session of the user logged in\r\n//         const session = await fileClient.checkSession();\r\n//         //make a named node of the session webid of the user\r\n//         const profile = $rdf.sym(session.webId);\r\n\r\n//         //get a store of the profile card of the logged in user\r\n//         let storeProfileCard = await this.getUserCard(session);\r\n        \r\n//         //store for the Public Profile Index\r\n//         let ppiObject = await this.getPPILocation(profile, storeProfileCard);\r\n\r\n//         //String that shows the location of the public storage of the pod\r\n//         let storagePublic = await this.getStorePublic(profile, storeProfileCard);        \r\n\r\n//         //Gets the location for the application or make a new enty in the Public profile index for the application.\r\n//         //also makes an empty file at the application location\r\n//         //string\r\n//         let applicationLocation = await this.getApplicationLocation(ppiObject.ppi , ppiObject.store, storagePublic);\r\n\r\n//         //get the application file in store form\r\n//         let appStore = await this.getAppStore(applicationLocation);\r\n\r\n//         //make a few example nodes to fill up the file\r\n//         //let newAppFile = await this.addExampleNodes(appStore, applicationLocation);\r\n//         //await fileClient.updateFile(applicationLocation.value, newAppFile);\r\n\r\n//         //update the model BeerCounter with data from the file.\r\n//         let map = this.getDatesAndCountsFromStore(appStore);\r\n//         beerCounter.setCountsPerDate(map);\r\n\r\n//         return new SolidCommuncator(session.webId, applicationLocation, appStore, beerCounter);\r\n//     }  \r\n\r\n//     static async getAppStore(applicationLocation){\r\n//         let appStore = $rdf.graph();\r\n//         let appTTL = await fileClient.fetch(applicationLocation);\r\n//         await $rdf.parse(appTTL, appStore, applicationLocation , \"text/turtle\");\r\n//         return appStore;\r\n//     }\r\n\r\n\r\n//    \r\n\r\n//     \r\n//     static getDatesAndCountsFromStore(store){\r\n//         let blankNodes = store.each(null , null, BEERCOUNTER('BeerCounterRecord'));\r\n//         let map = new Map();\r\n\r\n//         blankNodes.forEach(element => {\r\n//             let value = store.any(element, RDF('value'));\r\n//             let date = store.any(element, TERMS('created'));\r\n//             date = dateToString(new Date(date.value));\r\n\r\n//             map.set(date, value.value);\r\n//         });\r\n\r\n//         return map;\r\n//     }\r\n\r\n//    \r\n\r\n//     static async addExampleNodes(appStore, applocation){\r\n//         applocation = $rdf.sym(applocation);\r\n//         let bnode = $rdf.blankNode();\r\n//         let bnode1 = $rdf.blankNode();\r\n//         let bnode2 = $rdf.blankNode();\r\n//         let bnode3 = $rdf.blankNode();\r\n\r\n//         appStore.add(applocation, TERMS('references'), bnode);\r\n//         appStore.add(applocation, TERMS('references'), bnode1);\r\n//         appStore.add(applocation, TERMS('references'), bnode2);\r\n//         appStore.add(applocation, TERMS('references'), bnode3);\r\n\r\n//         appStore.add(bnode, RDF('type'), BEERCOUNTER('BeerCounterRecord'));\r\n//         appStore.add(bnode, RDF('value'), 4);        \r\n//         appStore.add(bnode, TERMS('created'), stringToDate(\"17/09/2019\"));  \r\n\r\n//         appStore.add(bnode1, RDF('type'), BEERCOUNTER('BeerCounterRecord'));\r\n//         appStore.add(bnode1, RDF('value'), 5);        \r\n//         appStore.add(bnode1, TERMS('created'), stringToDate(\"16/09/2019\"));  \r\n        \r\n//         appStore.add(bnode2, RDF('type'), BEERCOUNTER('BeerCounterRecord'));\r\n//         appStore.add(bnode2, RDF('value'), 16);        \r\n//         appStore.add(bnode2, TERMS('created'), stringToDate(\"15/09/2019\"));  \r\n\r\n//         appStore.add(bnode3, RDF('type'), BEERCOUNTER('BeerCounterRecord'));\r\n//         appStore.add(bnode3, RDF('value'), 2);\r\n//         appStore.add(bnode3, TERMS('created'), stringToDate(\"14/09/2019\"));  \r\n\r\n//         // let query = appStore.each(undefined, undefined, BEERCOUNTER('BeerCounterRecord'));\r\n//         // let query2 = appStore.each(query[0], undefined);\r\n\r\n//         let newAppFile = await $rdf.serialize(undefined, appStore,'text/turtle');\r\n//         return newAppFile;\r\n//     }\r\n// }\r\n\r\n// function dateToString(date){\r\n//     var dd = String(date.getDate()).padStart(2, '0');\r\n//     var mm = String(date.getMonth() + 1).padStart(2, '0');\r\n//     var yyyy = date.getFullYear();\r\n\r\n//     return dd + '/' + mm + '/' + yyyy;\r\n// }\r\n\r\n// function stringToDate(dateString){\r\n//     let array = dateString.split('/');\r\n//     let date = new Date(Date.UTC(array[2], array[1] - 1, array[0]));    \r\n//     return date;\r\n// }\r\n\r\n// export default SolidCommuncator;","import React from 'react';\r\nimport Knipsel from '../../assets/Knipsel.png'\r\nimport '../css/Home.scss'\r\n\r\nclass Home extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <section className = \"home\">\r\n                <h3>\r\n                    This is an application that is powered by Solid.<br/> \r\n                    Log in with your pod to use the application\r\n                </h3>\r\n                <br/>\r\n                <img src= {Knipsel} alt = \"Inrupt logo\"/>\r\n                <br/>\r\n                <h3 style = {{color : \"red\"}}>\r\n                    Carefull, This application is still in development and might mess up your pod.\r\n                    if you want to test it out, I recommend you make a new pod that you can delete\r\n                </h3>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport '../css/LogIn.scss'\r\n\r\nimport solidAuth from 'solid-auth-client'\r\n\r\nclass LogIn extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        console.log(props);\r\n        this.state = {\r\n            loginAsBrewer : false\r\n        }\r\n    }\r\n\r\n    onChangeCheckBox = () =>{\r\n        this.setState({\r\n            loginAsBrewer : !this.state.loginAsBrewer\r\n        })\r\n    }\r\n\r\n    onButtonClick = () => {\r\n        console.log(this.props);\r\n        let popupUri = './popup.html';\r\n        solidAuth.popupLogin({ popupUri }).then(() => {\r\n            solidAuth.currentSession().then( session => {\r\n                console.log(session);\r\n                this.props.onLoggedIn();\r\n                this.props.history.push(`/profile`)\r\n            })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let typeLogIn;\r\n        \r\n        if(this.state.loginAsBrewer){\r\n            typeLogIn = <p>Brewer</p>\r\n        }else{\r\n            typeLogIn = <p>Beer Drinker</p>\r\n        }\r\n\r\n\r\n        return(\r\n            <section id = {this.state.loginAsBrewer ? \"logInBrewer\" : \"logInBeerDrinker\"}>\r\n                <label className=\"switch\">\r\n                    <input type=\"checkbox\" onChange= {this.onChangeCheckBox}/>\r\n                    <span className=\"slider\"></span>\r\n                </label>\r\n\r\n                {typeLogIn}\r\n                <button onClick = {this.onButtonClick}>Log in</button>\r\n                <p><a href= \"https://inrupt.net\">register</a></p>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LogIn;\r\n","import React from 'react';\r\n\r\nclass Groups extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <h1>\r\n                Groups\r\n            </h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Groups;\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Friends extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            inputText : \"https://ozcanseker.inrupt.net/profile/card#me\",\r\n            error : undefined\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            inputText: e.target.value\r\n        })        \r\n    }\r\n\r\n    onButtonClick = () => {\r\n        this.props.solidCommunicator.getUserFile(this.state.inputText, (res, error) => {\r\n\r\n            if(error){\r\n                this.setState({\r\n                    error : error\r\n                })\r\n            }else{\r\n                this.props.history.push({\r\n                    pathname:\"/user\",\r\n                    state:{\r\n                        result: res\r\n                    }\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let friends = this.props.user.getFriends();        \r\n        let friendsElements = friends.map((friend, index) => {\r\n            return <li>\r\n                <Link key = {friend.uri} to= {`/friend/${index}`}>\r\n                    <p>\r\n                        name : {friend.name}\r\n                    </p>\r\n                </Link>\r\n            </li> \r\n        });\r\n\r\n        return(\r\n            <div>\r\n                <h1>\r\n                    Friends\r\n                </h1>\r\n                <br/>\r\n                <input type = \"text\" placeholder =\"profilecard link\" value = {this.state.inputText} onChange = {this.onChange}></input>\r\n                <button onClick = {this.onButtonClick}>Search on the web</button>\r\n\r\n                <p style = {{color: \"red\"}}>{this.state.error}</p>\r\n\r\n                <ul>\r\n                    {friendsElements}\r\n                </ul>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Friends;\r\n","import React from 'react';\r\n\r\n\r\nclass FriendPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        let friend = this.props.user.getFriendFromIndex(this.props.match.params.id);\r\n\r\n        return (\r\n            <h1>\r\n                {friend.name}\r\n            </h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FriendPage;","import React from 'react';\r\n\r\nclass Friends extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <h1>\r\n                Check-Ins\r\n            </h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Friends;\r\n","import React from 'react';\r\nimport '../css/BeerResults.scss';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass BeerResults extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.list = [\r\n            {name: \"Hertog jan\"},\r\n            {name: \"Hertog jan\"},\r\n            {name: \"Hertog jan\"},\r\n            {name: \"Hertog jan\"},\r\n            {name: \"Hertog jan\"},\r\n            {name: \"Hertog jan\"},\r\n            {name: \"Hertog jan\"},\r\n            {name: \"Hertog jan\"},\r\n            {name: \"Hertog jan\"},\r\n            {name: \"Hertog jan\"},\r\n        ]\r\n    }\r\n\r\n\r\n    render(){\r\n        let elements = this.list.map(listItem => {\r\n                return (\r\n                    <li>\r\n                        <Link to = \"/beer/hertogJan\" onClick = {this.props.onLinkClick}>\r\n                            {listItem.name}\r\n                        </Link>\r\n                    </li>\r\n                )\r\n        })\r\n\r\n        return(\r\n            <div>\r\n                <h1>Beer Results</h1>\r\n                <ul>\r\n                    {elements}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BeerResults;\r\n\r\n","import React from 'react';\r\nimport '../css/Profile.scss'\r\nimport profilePic from '../../assets/profilePic.png'\r\n\r\nclass Profile extends React.Component{\r\n    render(){\r\n        let user = this.props.user;\r\n        let imgUrl = user.getImageUrl();\r\n        console.log(user);\r\n\r\n        return(\r\n            <section className = \"profileScreen\">\r\n                \r\n                <div className=\"row\">\r\n                    <div className=\"leftColum\">\r\n                        <h1>\r\n                            {user.getName()}\r\n                        </h1>\r\n                        <img src = {imgUrl ? imgUrl : profilePic} alt = \"\"/>\r\n                        <p>\r\n                            check-ins : {0}\r\n                        </p>\r\n                        <p>\r\n                            reviews : 0\r\n                        </p>\r\n                        <p>\r\n                            Begin date : {dateToString(user.getBeginDate())}\r\n                        </p>\r\n                        <p>\r\n                            beerbonus points : {user.getBeerPoints()}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <h1>\r\n                            Recent activities\r\n                        </h1>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction dateToString(date){\r\n    var dd = String(date.getDate()).padStart(2, '0');\r\n    var mm = String(date.getMonth() + 1).padStart(2, '0');\r\n    var yyyy = date.getFullYear();\r\n\r\n    return dd + '/' + mm + '/' + yyyy;\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\n\r\nclass User extends React.Component{\r\n\r\n    render(){\r\n        console.log(this.props);\r\n        let result = this.props.location.state.result\r\n\r\n        return(\r\n            <section className = \"home\">\r\n                <h3>\r\n                    {result.name}\r\n                    <button>Send friendship request</button>\r\n                </h3>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User;\r\n","import React from 'react';\r\n\r\nclass BeerDetailScreen extends React.Component{\r\n\r\n    render(){\r\n        console.log();\r\n\r\n        return(\r\n            <h1>\r\n               {this.props.match.params.id}\r\n            </h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BeerDetailScreen;\r\n","import React from 'react';\r\n\r\nimport {Switch, Route, Link, withRouter, Redirect} from \"react-router-dom\";\r\n\r\n\r\n/**\r\n * Imported Pages\r\n */\r\nimport Home from './page/Home'\r\nimport LogIn from './page/LogIn'\r\nimport Groups from './page/Groups';\r\nimport Friends from './page/Friends';\r\nimport FriendsPage from './page/FriendPage';\r\nimport CheckIns from './page/CheckIns';\r\nimport BeerResults from './page/BeerResults';\r\nimport Profile from './page/Profile';\r\nimport UserPage from './page/User';\r\nimport Inbox from './page/Inbox';\r\nimport BeerDetailScreen from './page/BeerDetailScreen';\r\n\r\nclass AppRoutes extends React.Component{\r\n    render(){\r\n  \t  return(\r\n         <Switch>\r\n              <Route exact path=\"/\" component={Home} isLoggedIn = {this.props.loggedIn}/>\r\n              <PrivateRoute path=\"/user\" component={UserPage} isLoggedIn = {this.props.loggedIn}/> \r\n              <PrivateRoute path=\"/beer/:id\" component={BeerDetailScreen} isLoggedIn = {this.props.loggedIn}/> \r\n              <PrivateRoute exact path=\"/friend\" component={Friends} isLoggedIn = {this.props.loggedIn} user = {this.props.userObject} solidCommunicator = {this.props.solidCommunicator}/>\r\n              <PrivateRoute path=\"/friend/:id\" component={FriendsPage} isLoggedIn = {this.props.loggedIn} user = {this.props.userObject}/>\r\n              <PrivateRoute path=\"/beerresults\" component={BeerResults} isLoggedIn = {this.props.loggedIn} onLinkClick = {this.props.clearSearchQuery}/>\r\n              <PrivateRoute path=\"/groups\" component={Groups} isLoggedIn = {this.props.loggedIn}/>\r\n              <PrivateRoute path='/profile' component={Profile} isLoggedIn = {this.props.loggedIn} user = {this.props.userObject}/>\r\n              <PrivateRoute path='/checkIns' component={CheckIns} isLoggedIn = {this.props.loggedIn}/>\r\n              <PrivateRoute path='/inbox' component={Inbox} isLoggedIn = {this.props.loggedIn}/>\r\n              <PrivateRouteLogIn path=\"/login\" component={LogIn} isLoggedIn = {this.props.loggedIn} onLoggedIn = {this.props.onLoggedIn}/>\r\n          </Switch>)\r\n    }\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, isLoggedIn ,...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n      isLoggedIn\r\n      ?   <Component {...props} {...rest}/>\r\n      : <Redirect to='/' />\r\n    )} />\r\n  )\r\n  \r\n  const PrivateRouteLogIn = ({ component: Component, isLoggedIn, onLoggedIn ,...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n      !isLoggedIn\r\n        ? <Component onLoggedIn = {onLoggedIn} {...props} />\r\n        : <Redirect to='/profile' />\r\n    )} />\r\n  )\r\n\r\nexport default withRouter(AppRoutes);","import React from 'react';\r\nimport '../css/NavBar.scss'\r\n\r\nclass NavBar extends React.Component{\r\n    onInput = (e) => {\r\n        this.props.onBeerSearch(e.target.value);\r\n    }\r\n\r\n    render(){\r\n        let cldn =React.Children.toArray( this.props.children);\r\n        let input;\r\n\r\n        cldn = cldn.map((child, index) => {            \r\n            if(index !== cldn.length - 1){\r\n                return (\r\n                    <li key = {child.props.to} className = \"navBarOptionContainer\">\r\n                        {child}\r\n                    </li>\r\n                )\r\n            }else{\r\n                return(\r\n                    <li key = {child.props.to} className = \"navBarOptionContainerLast\">\r\n                        {child}\r\n                    </li>\r\n                )\r\n            }            \r\n        });\r\n\r\n        if(this.props.loggedIn){\r\n            input = (<li className = \"navBarSearch\">\r\n                <input  placeholder = \"search for beers\" value = {this.props.searchQuery} onChange = {this.onInput} />\r\n                <input type = \"button\" value = \"x\" onClick = {this.props.onSearchBarButtonClick}/>\r\n            </li>)\r\n        }\r\n\r\n        return(\r\n            <nav>\r\n                <ul id = \"navBar\">\r\n                    {cldn}\r\n                    {input}\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;\r\n","/**\n * Libs\n */\nimport React from 'react';\nimport solidAuth from 'solid-auth-client'\nimport {Link, withRouter} from \"react-router-dom\";\nimport SolidCommunicator from './network/SolidCommunicator'\n\nimport AppRoutes from './routes/AppRoutes'\n\n/**\n * Components\n */\nimport NavBar from './component/NavBar';\n\n/**\n * Assests\n */\nimport './css/App.scss';\nimport Knipsel from './assets/Knipsel.png'\nimport Logo from './assets/logo.png'\nimport User from './model/User';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      loggedIn : false,\n      searchQuery : '',\n      userObject: undefined,\n      solidCommunicator : undefined\n    }\n  }\n\n  componentDidMount(){\n    this.checkLoggedIn();\n  }\n\n  update = () => {\n    this.setState({\n      update : true\n    })\n  }\n\n  clearSearchQuery = () => {\n      this.setState({\n        searchQuery : ''\n      },)\n  }\n\n  checkLoggedIn = () => {\n    solidAuth.currentSession().then( session => {\n      if(session){\n\n        //make new user\n        let user = new User(session.webId);\n        user.subscribe(this);\n\n        SolidCommunicator.build(user).then(obj => {\n          this.setState({\n            userObject : obj.user,\n            solidCommunicator : obj.solidCommunicator, \n            loggedIn: true,\n          })\n        });\n\n        this.props.history.push(`/profile`)\n      }\n    })\n  }\n\n  onClickLogOut = () => {\n    solidAuth.logout();\n\n    this.setState({\n      loggedIn : false,\n      userObject : undefined\n    });\n  }\n\n  onLoggedIn = () => {\n    this.checkLoggedIn();\n  }\n\n  onBeerSearch = (text) => {\n    let location = this.props.location.pathname;\n\n    this.setState({\n      searchQuery : text\n    })\n\n    if(text){\n      if(location !== \"/beerresults\"){\n        this.props.history.push(\"/beerresults\");\n      }\n\n      /**\n       * Vindt hier de bier\n       */\n    }else{\n      this.props.history.goBack();\n    }\n  }\n\n\n  render(){\n    let navBar;\n\n    if(this.state.loggedIn){\n      navBar = (\n         <NavBar onSearchBarButtonClick = {this.onSearchBarButtonClick} \n                 onBeerSearch = {this.onBeerSearch} \n                 loggedIn = {this.state.loggedIn} \n                 searchQuery = {this.state.searchQuery}>\n          <Link to = \"/profile\">Profile</Link>\n          <Link to = \"/checkIns\">Check ins</Link>\n          <Link to = \"/friend\">Friends</Link>\n          <Link to = \"/groups\">Groups</Link>\n          <Link to = \"/\" onClick = {this.onClickLogOut}>Log out</Link>\n        </NavBar>\n      )\n    }else{\n      navBar = (\n         <NavBar onBeerSearch = {this.onBeerSearch} loggedIn = {this.state.loggedIn}>\n          <Link to = \"/LogIn\">Log in</Link>\n        </NavBar>\n      )\n    }\n\n    return (\n      <div id = \"AppRoot\">\n        <header>\n          <Link to = \"/\">\n            <div>\n              <img src= {Logo} alt = \"\"/>\n              <h1>\n              Linked social beer\n              </h1>\n           </div>\n          </Link>\n        </header>\n\n        {navBar}\n        <AppRoutes \n          loggedIn = {this.state.loggedIn}\n          userObject = {this.state.userObject}\n          solidCommunicator = {this.state.solidCommunicator}\n          clearSearchQuery = {this.clearSearchQuery}\n          onLoggedIn = {this.onLoggedIn}\n        />\n          <footer>\n            <span>\n              This application is powered by\n            </span>\n              <a href=\"https://solid.inrupt.com\">\n              <img alt = \"Solid inrupt\" src={Knipsel} /> \n            </a>\n          </footer>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Knipsel.4dafcfef.png\";"],"sourceRoot":""}