{"version":3,"sources":["assets/Knipsel.png","assets/logo.png","../node_modules/@trust/webcrypto/src/algorithms sync","model/Friend.js","model/BeerCheckIn.js","solid/SolidMethods.js","model/Beer.js","solid/solidCommunicatorInits/PodFolderBuilder.js","error/AccessError.js","solid/solidCommunicatorInits/AccessChecker.js","solid/solidCommunicatorInits/SolidCommunicatorBuilder.js","solid/solidCommunicatorInits/PreApplicationHandelings.js","solid/rdf/SolidTtlTemplates.js","model/Brewer.js","solid/SolidCommunicator.js","component/NavBar.js","routes/page/Home.js","routes/page/LogIn.js","routes/page/Groups.js","routes/page/Friends.js","component/BeerCheckInComponent.js","routes/page/FriendPage.js","routes/page/CheckIns.js","routes/page/BeerResults.js","routes/page/Profile.js","routes/page/User.js","routes/page/Inbox.js","component/BeerCheckInOverlay.js","routes/page/BeerDetailScreen.js","routes/page/BrewerPage.js","routes/AppRoutes.js","routes/extrapage/AclErrorPage.js","routes/extrapage/FetchingPage.js","model/User.js","App.js","serviceWorker.js","index.js","assets/profilePic.png"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","Friend","uri","name","pictureurl","applicationFolder","startdate","points","this","_name","getUserName","_uri","_imageUrl","_applicationFolder","_startDate","_points","_userCheckIns","_checkIns","_beerReviews","_subscribers","beerReviews","upDateSubScribers","checkIns","map","subscriber","update","push","filter","subscriberList","replace","Date","getTime","userCheckins","concat","BeerCheckIn","fileLocation","userWebId","userName","beerLocation","beerName","checkInTime","rating","review","_fileLocation","_type","_userWebId","_userName","_beerLocation","_beerName","_checkInTime","_rating","_review","fileClient","require","authClient","rdfLib","SOLID","Namespace","VCARD","FOAF","LDP","SOLIDLINKEDBEER","RDF","postSolidFile","folder","filename","body","a","fetch","method","headers","putSolidFile","url","getUserFile","userttt","graph","status","text","parse","any","undefined","profile","sym","publicProfileIndex","readFile","value","ppiTTL","ppigraph","app","appQuery","nameFN","imageURL","inbox","result","imageUrl","appLocation","fetchFriend","friendUrl","friend","friendAppdataLocation","friendsAppdata","blankNode","getTenUserCheckIns","getApplocation","then","res","addUserCheckIns","userBeerCheckIns","setBeerReviews","reviews","setCheckIns","console","log","applicationLocation","checkinLocation","readFolder","fileContents","files","reverse","i","length","ttlFile","namedNode","webId","userId","beerlocation","beername","checkinTime","beerCheckIn","Beer","type","style","brewer","location","_style","_brewer","_location","description","containers","_description","_containers","rdflib","TERMS","ACL","appName","buildFolders","storePublicProfileIndex","storagePublic","createAppNodeForPublicTypeIndex","applocation","makeAppFolderStructure","sleep","ms","Promise","setTimeout","checkFolderIntegrity","store","publicTypeIndex","publicLocation","findEmptyFolder","appLocationNN","add","serialize","newTTLpublicTypeindex","makeRandomString","characters","charactersLength","charAt","Math","floor","random","appFolderUrl","aclUrl","createFolder","getAclAppFolder","beerDrinkerUrl","getFriendsFile","friendsUrl","appDataFileAcl","appDataFile","getAppDataInit","getAclAppData","getACLInboxFolder","inboxUrl","inboxUrlacl","reviewUrlacl","reviewUrl","getACLSubmittersFriends","bn","appUrl","webIdUserLoggedIn","owner","agent","urlFile","friendsgroup","friendsgroupRequested","_public","resourceUrl","group1","resource","fgroup1","fgroup2","AccessError","args","message","checkacess","storeProfileCard","readAcess","match","Write","Append","Control","PIM","buildSolidCommunicator","user","returnObject","webIdNN","getWebId","getUserCard","getPPILocation","ppiObject","getStorePublic","getApplicationLocation","ppi","sc","getUserDetails","getAppData","appData","getFriends","friendsData","friends","friendsStore","group","sentGroup","appStore","blankNodeAppStore","webIdUrl","profileCardTTl","storePublicTypeIndex","publicTypeIndexTTL","appdataLocation","appdatattl","friendsLocation","ttlFriends","query","each","index","preApplicationHandelings","scValues","inboxContent","acceptedRequests","file","includes","declinedRequests","checkAcceptedFriendShipRequests","checkDeclinedFriendShipRequests","postLocation","friendGraph","friendsGroup","friendsSent","filettl","removeMatches","friendFile","addFriend","deleteFile","friendsTtl","getInviteToLSBInvitation","urlInvitee","invitation","getFriendShipRequest","getDeclineFriendshipRequest","from","getAcceptFriendshipRequest","beerCheckInTemplate","time","beerReviewInTemplate","Brewer","groep","opgericht","owners","provincie","email","taxID","telephone","postalCode","streetAddress","addressRegion","addressLocality","_groep","_opgericht","_owners","_provincie","_email","_taxid","_telephone","_url","_postalcode","_streetAdress","_addressRegion","_addressLocality","_beers","beers","DBPEDIA","SCHEMA","SolidCommunicator","values","_friendsStore","_friendGroup","_friendsRequested","_appStore","_blankNodeAppStore","_user","_applocation","_checkInFolder","_appStoreLocation","setName","setImageUrl","addFriends","setBeerPoints","setBeginDate","setApplicationLocation","solidCommunicator","fetchFile","fileTTL","blanknode","query1","query2","fileName","getName","invitationTTL","SolidTemplates","checkIfUserIsFriend","fileNameName","friendsFile","friendsTTL","declineTTL","acceptedTTL","beersIndexTTl","forEach","beer","beerTTl","container","updateInformation","hasReview","date","checkingFolder","addBeerReviews","addBeerPoints","sendBeerPoints","addCheckIn","getUTCDate","amount","beerPointsQueryNow","parseInt","appTTL","brewerTTl","taxid","brewerUrl","beerIndex","blankNodeAdress","postalcode","streetaddress","addressregion","addresslocality","fetchBeerData","addBeers","NavBar","onInput","props","onBeerSearch","target","input","cldn","React","Children","toArray","children","child","key","to","className","loggedIn","placeholder","searchQuery","onChange","onClick","onSearchBarButtonClick","Component","Home","src","Knipsel","alt","color","LogIn","onChangeCheckBox","setState","loginAsBrewer","state","onButtonClick","solidAuth","popupLogin","popupUri","currentSession","session","onLoggedIn","history","onRegisterClick","window","assign","typeLogIn","activeClass","join","Groups","Friends","inputText","toUpperCase","friendUri","getUri","friendUri2","friendUri3","friendUri4","pathname","error","friendsElements","BeerCheckInComponent","context","checkIn","checkin","FriendPage","getFriendFromIndex","params","prevProps","prevState","snapshot","unsubscribe","subscribe","imgUrl","getImageUrl","userCheckIns","getUserCheckIns","profilePic","getCheckIns","getBeerReviews","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","dateToString","getStartDate","getPoints","getAllCheckIns","BeerResults","elements","listItem","onLinkClick","Profile","getBeginDate","getBeerPoints","TransitionGroup","User","onNotJoinedButtonClick","inviteUserToSolib","clicked","sendFriendShipRequest","sendFriendshipRequest","button","disabled","Inbox","declineFriendShipRequest","array","messages","splice","declineFriendSchipRequest","acceptFriendShipRequest","acceptFriendSchipRequest","getInboxContents","items","buttonDiv","BeerCheckInOverlay","onDivClick","stopPropagation","addReview","Rating","beerRating","precision","event","newValue","setBeerRating","beerReview","onBeerReviewChange","onOverLayCancelClick","overlay","display","onAddReviewClick","checkInBeer","BeerDetailScreen","onPostBeerReview","postBeerReview","onCheckInClick","fetchBeer","brewerName","BrewerPage","getBrewer","getBrewerInformation","brewerId","mounted","section","AppRoutes","exact","path","component","isLoggedIn","UserPage","userObject","FriendsPage","clearSearchQuery","CheckIns","PrivateRoute","rest","render","PrivateRouteLogIn","withRouter","AclErrorPage","FetchingPage","_beginDate","_beerPoints","_friends","_applicationLocation","newFriends","newFriend","beerPoints","beginDate","App","checkLoggedIn","fetchingFiles","build","accessError","onClickLogOut","logout","goBack","navBar","Logo","href","Boolean","hostname","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90e566d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Knipsel.4dafcfef.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.bc392ac4.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 435;","class Friend {\r\n    constructor(uri, name, pictureurl, applicationFolder, startdate, points){\r\n        this._name = name ? name : this.getUserName(uri);\r\n        this._uri = uri;\r\n        this._imageUrl = pictureurl;\r\n        this._applicationFolder = applicationFolder;\r\n        this._startDate = startdate;\r\n        this._points = points;\r\n        this._userCheckIns = [];\r\n        this._checkIns = 0;\r\n        this._beerReviews = 0;\r\n\r\n        this._subscribers = [];\r\n    }\r\n\r\n    setBeerReviews(beerReviews){\r\n        this._beerReviews = beerReviews;\r\n        this.upDateSubScribers()\r\n\r\n    }\r\n\r\n    setCheckIns(checkIns){\r\n        this._checkIns = checkIns;\r\n        this.upDateSubScribers()\r\n\r\n    }\r\n\r\n    getCheckIns(){\r\n        return this._checkIns;\r\n    }\r\n\r\n    getBeerReviews(){\r\n        return this._beerReviews;\r\n    }\r\n\r\n    upDateSubScribers(){\r\n        this._subscribers.map(subscriber => subscriber.update());\r\n    }\r\n\r\n    subscribe(subscriber){\r\n        this._subscribers.push(subscriber);\r\n    }\r\n\r\n    unsubscribe(subscriber){\r\n        this._subscribers.filter(subscriberList  => {\r\n            return subscriberList !== subscriber;\r\n        });\r\n    }\r\n\r\n    getUserName(uri){\r\n        return  uri.replace(\"https://\", \"\").replace(/\\..*/, \"\");\r\n    }\r\n\r\n    getApplocation(){\r\n        return this._applicationFolder;\r\n    }\r\n\r\n    getUri(){\r\n        return this._uri;\r\n    }\r\n\r\n    getImageUrl(){\r\n        return this._imageUrl;\r\n    }\r\n\r\n    getName(){\r\n        return this._name;\r\n    }\r\n\r\n    getStartDate(){\r\n        //send a copy of the date back and not the date itself\r\n        return new Date(this._startDate.getTime())\r\n    }\r\n\r\n    getPoints(){\r\n        return this._points;\r\n    }\r\n\r\n    addUserCheckIns(userCheckins){\r\n        this._userCheckIns = userCheckins.concat(this._userCheckIns);\r\n        this.upDateSubScribers();\r\n    }\r\n\r\n    getUserCheckIns(){\r\n        return this._userCheckIns;\r\n    }\r\n}\r\n\r\nexport default Friend;","class BeerCheckIn {\r\n    constructor(fileLocation, userWebId, userName, beerLocation, beerName, checkInTime, rating, review){\r\n        this._fileLocation = fileLocation;\r\n        this._type  = rating? \"BeerReview\" : \"BeerCheckIn\";\r\n        this._userWebId = userWebId;\r\n        this._userName = userName;\r\n        this._beerLocation = beerLocation;\r\n        this._beerName = beerName;\r\n        this._checkInTime = checkInTime;\r\n        this._rating = rating;\r\n        this._review = review;\r\n    }\r\n}\r\n\r\nexport default BeerCheckIn;","import Friend from '../model/Friend';\r\nimport BeerCheckIn from \"../model/BeerCheckIn\";\r\n\r\nconst fileClient = require('solid-file-client');\r\nconst authClient = require('solid-auth-client');\r\nconst rdfLib = require('rdflib');\r\n\r\nconst SOLID = rdfLib.Namespace(\"http://www.w3.org/ns/solid/terms#\");\r\nconst VCARD = rdfLib.Namespace(\"http://www.w3.org/2006/vcard/ns#\");\r\nconst FOAF = rdfLib.Namespace('http://xmlns.com/foaf/0.1/');\r\nconst LDP = rdfLib.Namespace('http://www.w3.org/ns/ldp#');\r\nconst SOLIDLINKEDBEER = rdfLib.Namespace('https://ozcanseker.inrupt.net/solidlinkedbeer#');\r\nconst RDF = rdfLib.Namespace(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\");\r\n\r\nexport async function postSolidFile(folder, filename, body) {\r\n  authClient.fetch(folder, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'text/turtle',\r\n      'Link': '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"',\r\n      'SLUG': filename\r\n    },\r\n    body: body\r\n  });\r\n}\r\n\r\nexport async function putSolidFile(url, body) {\r\n  authClient.fetch(url, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'text/turtle'\r\n    },\r\n    body: body\r\n  });\r\n}\r\n\r\n// let body = `INSERT DATA { <${this.state.webId+\"#comment\"}> <${SOLIDLINKEDBEER('points6').value}> <${8}> }`;\r\n// let appDataFile;\r\n// appendSolidResource(appDataFile, {body})\r\n/**\r\n * \r\n * @param {*} url \r\n * @param {*} body \r\n */\r\nexport async function appendSolidResource(url, body) {\r\n  authClient.fetch(url, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Content-Type': 'application/sparql-update'\r\n    },\r\n    body: body\r\n  });\r\n}\r\n\r\nexport async function getUserFile(url) {\r\n  let inbox;\r\n\r\n  //get url resource\r\n  let userttt = await authClient.fetch(url);\r\n  let graph = rdfLib.graph();\r\n\r\n  if(userttt.status > 403){\r\n    throw new Error(\"403: user unauthorized\");\r\n  }else if(userttt.status > 400){\r\n    throw new Error(\"file not found\");\r\n  }\r\n\r\n  userttt = await userttt.text();\r\n\r\n  try {\r\n    //parse to check if it is ttl\r\n    rdfLib.parse(userttt, graph, url, \"text/turtle\");\r\n\r\n    //check if it is a profile card\r\n    let query = graph.any(undefined, undefined, FOAF('PersonalProfileDocument'));\r\n\r\n    if (query) {\r\n      let profile = rdfLib.sym(url);\r\n\r\n      //check if user has ppi\r\n      const publicProfileIndex = graph.any(profile, SOLID(\"publicTypeIndex\"));\r\n\r\n      if (publicProfileIndex) {\r\n        let ppiTTL = await fileClient.readFile(publicProfileIndex.value);\r\n        let ppigraph = rdfLib.graph();\r\n        rdfLib.parse(ppiTTL, ppigraph, publicProfileIndex.value, \"text/turtle\");\r\n\r\n        let app = rdfLib.sym(publicProfileIndex.value + \"#SocialLinkedBeer\");\r\n        let appQuery = ppigraph.any(app, SOLID(\"instance\"));\r\n\r\n        //get name and Image            \r\n        let nameFN = graph.any(profile, VCARD('fn'));\r\n        let imageURL = graph.any(profile, VCARD('hasPhoto'));\r\n\r\n        if (!appQuery) {\r\n          inbox = graph.any(profile, LDP('inbox'));\r\n        }\r\n\r\n        //applocation is not of beerdrinker\r\n        let result = {\r\n          url: url,\r\n          name: nameFN ? nameFN.value : undefined,\r\n          imageUrl: imageURL ? imageURL.value : undefined,\r\n          appLocation: appQuery ? appQuery.value : undefined,\r\n          inbox: inbox ? inbox.value : undefined\r\n        }\r\n\r\n        return result;\r\n      } else {\r\n        throw new Error(\"no ppi\");\r\n      }\r\n    } else {\r\n      throw new Error(\"not a profile card\");\r\n    }\r\n  } catch (err) {\r\n    throw new Error(\"Not a correct profile linked data file\");\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} friendUrl \r\n */\r\nexport async function fetchFriend(friendUrl){\r\n  try{\r\n    let friend = await getUserFile(friendUrl);\r\n\r\n    let friendAppdataLocation = friend.appLocation + 'beerdrinker/appdata.ttl';\r\n    let friendsAppdata = await fileClient.readFile(friendAppdataLocation);\r\n  \r\n    let graph = rdfLib.graph();\r\n    rdfLib.parse(friendsAppdata, graph, friendAppdataLocation, \"text/turtle\");\r\n  \r\n    let blankNode = graph.any(undefined, SOLIDLINKEDBEER('startdate'));\r\n  \r\n    let startdate = graph.any(blankNode, SOLIDLINKEDBEER('startdate'));\r\n    let points = graph.any(blankNode, SOLIDLINKEDBEER('points'));\r\n  \r\n    friend = new Friend(friendUrl, friend.name, friend.imageUrl, friend.appLocation, new Date(startdate.value), points.value);\r\n\r\n    getTenUserCheckIns(friend.getApplocation()).then(res => {\r\n      friend.addUserCheckIns(res.userBeerCheckIns);\r\n      friend.setBeerReviews(res.reviews);\r\n      friend.setCheckIns(res.checkIns);\r\n    });\r\n\r\n    return friend;\r\n  }catch(e){\r\n    //TODO delete user from friends if 403\r\n    //TODO general error handling\r\n    console.log(e);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport async function getTenUserCheckIns(applicationLocation){\r\n  let checkinLocation = applicationLocation + 'beerdrinker/checkins/';\r\n  let fileContents = (await fileClient.readFolder(checkinLocation)).files.reverse();\r\n  let userBeerCheckIns = [];\r\n\r\n  let checkIns = 0;\r\n  let reviews = 0;\r\n\r\n  for (let i = 0; i < fileContents.length && i < 10; i++) {\r\n    let ttlFile = await fileClient.readFile(fileContents[i].url);\r\n\r\n    let graph = rdfLib.graph();\r\n    let namedNode = rdfLib.sym(fileContents[i].url);\r\n    rdfLib.parse(ttlFile, graph, fileContents[i].url, \"text/turtle\");\r\n\r\n    let type = graph.any(namedNode, RDF('type'));\r\n    let webId = graph.any(namedNode, SOLIDLINKEDBEER('webId'));\r\n    let userId = graph.any(namedNode, SOLIDLINKEDBEER('username'));\r\n    let beerlocation = graph.any(namedNode, SOLIDLINKEDBEER('beerLocation'));\r\n    let beername = graph.any(namedNode, SOLIDLINKEDBEER('beerName'));\r\n    let checkinTime = graph.any(namedNode, SOLIDLINKEDBEER('checkInTime'));\r\n    let rating = graph.any(namedNode, SOLIDLINKEDBEER('rating'));\r\n    let review = graph.any(namedNode, SOLIDLINKEDBEER('review'));\r\n\r\n    let beerCheckIn = new BeerCheckIn(fileContents[i].url,\r\n        webId.value,\r\n        userId? userId.value : undefined,\r\n        beerlocation.value,\r\n        beername.value,\r\n        checkinTime.value,\r\n        rating ? rating.value : undefined,\r\n        review ? review.value : undefined\r\n    );\r\n\r\n    if(rating){\r\n      reviews++;\r\n    }else{\r\n      checkIns++;\r\n    }\r\n\r\n    userBeerCheckIns.push(beerCheckIn);\r\n  }\r\n\r\n  return {userBeerCheckIns : userBeerCheckIns, reviews : reviews, checkIns : checkIns};\r\n}\r\n\r\nexport async function getSingleCheckInFile(){\r\n\r\n}","class Beer {\r\n    constructor(name, type, style, brewer, location){\r\n        this._name = name;\r\n        this._type = type;\r\n        this._style = style;\r\n        this._brewer = brewer;\r\n        this._location = location;\r\n    }\r\n\r\n    updateInformation(name, type, style, brewer, description, containers){\r\n        this._name = name;\r\n        this._type = type;\r\n        this._style = style;\r\n        this._brewer = brewer;\r\n        this._description = description;\r\n        this._containers = containers;\r\n    }\r\n}\r\n\r\nexport default Beer;","import { postSolidFile, putSolidFile, getUserFile } from \"../SolidMethods\";\r\n\r\nconst fileClient = require('solid-file-client');\r\nconst authClient = require('solid-auth-client');\r\nconst rdflib = require('rdflib');\r\n\r\nconst SOLID = rdflib.Namespace(\"http://www.w3.org/ns/solid/terms#\");\r\nconst VCARD = rdflib.Namespace(\"http://www.w3.org/2006/vcard/ns#\");\r\nconst TERMS = rdflib.Namespace('http://purl.org/dc/terms/');\r\nconst RDF = rdflib.Namespace(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\");\r\nconst SOLIDLINKEDBEER = rdflib.Namespace('https://ozcanseker.inrupt.net/solidlinkedbeer#');\r\nconst FOAF = rdflib.Namespace('http://xmlns.com/foaf/0.1/');\r\nconst ACL = rdflib.Namespace(\"http://www.w3.org/ns/auth/acl#\");\r\n\r\nconst appName = \"sociallinkedbeer\";\r\n\r\nexport async function buildFolders(publicProfileIndex, storePublicProfileIndex, storagePublic, app, webId) {\r\n  //TODO a whole lot of error checking. Checking for 400 error codes and stuff like that\r\n  let applocation = await createAppNodeForPublicTypeIndex(storePublicProfileIndex, publicProfileIndex, storagePublic, app);\r\n  await makeAppFolderStructure(applocation, webId);\r\n\r\n  //sleep zodat de server de requests kan verwerken\r\n  await sleep(2000);\r\n\r\n  return applocation;\r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, ms)\r\n  })\r\n}\r\n\r\nexport async function checkFolderIntegrity() {\r\n  //TODO Check integrity\r\n  console.log(\"TODO checkFolderIntegrity\");\r\n}\r\n\r\n/**\r\n * Adds the applicatioin to the public type index\r\n * @param {store} store \r\n * @param {NN} publicTypeIndex \r\n * @param {string} publicLocation \r\n * @param {string} app \r\n */\r\nasync function createAppNodeForPublicTypeIndex(store, publicTypeIndex, publicLocation, app) {\r\n  //find empty folder\r\n  let appLocation = await findEmptyFolder(publicLocation);\r\n\r\n  //create a named node for the app\r\n  let appLocationNN = rdflib.sym(appLocation);\r\n\r\n  //add values to the pti\r\n  store.add(publicTypeIndex, TERMS('references'), app);\r\n  store.add(app, RDF('type'), SOLID('TypeRegistration'));\r\n  store.add(app, SOLID('instance'), appLocationNN);\r\n\r\n  //serialize and send the pti\r\n  let newTTLpublicTypeindex = await rdflib.serialize(undefined, store, publicTypeIndex.value, 'text/turtle');\r\n  await putSolidFile(publicTypeIndex.value, newTTLpublicTypeindex);\r\n\r\n  return appLocation;\r\n}\r\n\r\n/**\r\n * Finds an empty folder for the application\r\n * @param {} publicLocation \r\n */\r\nasync function findEmptyFolder(publicLocation) {\r\n  //TODO improve this. You can check if the other folder holds up to your standards. A lot of possibilities\r\n  let appLocation = publicLocation + appName + '/'\r\n\r\n  //see if there is a folder at the applocation\r\n  let res = await authClient.fetch(appLocation);\r\n\r\n  //make eiher a new random foldername or use the original\r\n  if (res.status % 400 < 100) {\r\n    return appLocation;\r\n  } else {\r\n    return appLocation = publicLocation + appName + makeRandomString(10) + '/'\r\n  }\r\n}\r\n\r\n/**\r\n * Makes a random string\r\n * @param {int} length \r\n */\r\nfunction makeRandomString(length) {\r\n  var result = '';\r\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  var charactersLength = characters.length;\r\n  for (var i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Makes the folder struckture for the application\r\n * @param {string} appFolderUrl \r\n * @param {string} webId \r\n */\r\nasync function makeAppFolderStructure(appFolderUrl, webId) {\r\n  //TODO make all async\r\n  let body;\r\n\r\n  //top folder\r\n  let aclUrl = appFolderUrl + '.acl';\r\n\r\n  await fileClient.createFolder(appFolderUrl);\r\n  body = getAclAppFolder(appFolderUrl, aclUrl, webId);\r\n  await putSolidFile(aclUrl, body);\r\n\r\n  //beerdrinker\r\n  let beerDrinkerUrl = appFolderUrl + \"beerdrinker/\";\r\n  await fileClient.createFolder(beerDrinkerUrl);\r\n\r\n  // friends\r\n  let friendsUrl = beerDrinkerUrl + 'friends.ttl';\r\n  body = getFriendsFile(friendsUrl, webId);\r\n\r\n  await postSolidFile(beerDrinkerUrl, 'friends', body);\r\n\r\n  //appData \r\n  let appDataFile = beerDrinkerUrl + 'appdata.ttl';\r\n  let appDataFileAcl = appDataFile + '.acl';\r\n  \r\n  body = getAppDataInit(appDataFile);\r\n  await postSolidFile(beerDrinkerUrl, 'appdata', body);\r\n  \r\n  body = getAclAppData(appDataFile, appDataFileAcl, webId, friendsUrl);\r\n  await putSolidFile(appDataFileAcl, body);\r\n\r\n  //inboxfolder\r\n  let inboxUrl = beerDrinkerUrl + 'inbox/';\r\n  let inboxUrlacl = inboxUrl + '.acl';\r\n  body = getACLInboxFolder(inboxUrl, inboxUrlacl, webId);\r\n\r\n  await fileClient.createFolder(inboxUrl);\r\n  await putSolidFile(inboxUrlacl, body);\r\n\r\n  //check in folder        \r\n  let reviewUrl = beerDrinkerUrl + 'checkins/';\r\n  let reviewUrlacl = reviewUrl + '.acl';\r\n\r\n  await fileClient.createFolder(reviewUrl);\r\n  body = getACLSubmittersFriends(reviewUrl, reviewUrlacl, webId, friendsUrl);\r\n  await putSolidFile(reviewUrlacl, body);\r\n}\r\n\r\n/**\r\n * The init file for the appdata\r\n * @param {string} url \r\n */\r\nfunction getAppDataInit(url) {\r\n  let graph = rdflib.graph();\r\n\r\n  let bn = rdflib.blankNode();\r\n\r\n  graph.add(bn, SOLIDLINKEDBEER('startdate'), new Date());\r\n  graph.add(bn, SOLIDLINKEDBEER('points'), 0);\r\n\r\n  let ttl = rdflib.serialize(undefined, graph, url, 'text/turtle');\r\n  return ttl;\r\n}\r\n\r\n/**\r\n * Makes the acl for the app folder\r\n * Only owner can see, write and control\r\n * @param {*} appUrl \r\n * @param {*} aclUrl \r\n * @param {*} webIdUserLoggedIn \r\n */\r\nfunction getAclAppFolder(appUrl, aclUrl, webIdUserLoggedIn) {\r\n  let graph = rdflib.graph();\r\n  let owner = rdflib.sym(aclUrl + \"#Owner\");\r\n  let app = rdflib.sym(appUrl);\r\n  let agent = rdflib.sym(webIdUserLoggedIn);\r\n\r\n  graph.add(owner, RDF('type'), ACL('Authorization'));\r\n\r\n  graph.add(owner, ACL('accessTo'), app);\r\n  graph.add(owner, ACL('default'), app);\r\n  graph.add(owner, ACL('agent'), agent);\r\n\r\n  graph.add(owner, ACL('mode'), ACL('Control'));\r\n  graph.add(owner, ACL('mode'), ACL('Read'));\r\n  graph.add(owner, ACL('mode'), ACL('Write'));\r\n\r\n  return rdflib.serialize(undefined, graph, aclUrl, 'text/turtle');\r\n}\r\n\r\n/**\r\n * Init for the friends file\r\n * @param {string} urlFile \r\n * @param {*} webId \r\n */\r\nfunction getFriendsFile(urlFile) {\r\n  let graph = rdflib.graph();\r\n\r\n  let friendsgroup = rdflib.sym(urlFile + \"#Friends\");\r\n  let friendsgroupRequested = rdflib.sym(urlFile + \"#FriendsRequested\");\r\n\r\n  graph.add(friendsgroup, RDF('type'), VCARD('Group'));\r\n  graph.add(friendsgroup, VCARD('hasUID'), rdflib.sym(\"urn:uuid:8831CBAD-1111-2222-8563-F0F4787E5398:ABGroup\"));\r\n\r\n  graph.add(friendsgroupRequested, RDF('type'), VCARD('Group'));\r\n  graph.add(friendsgroupRequested, VCARD('hasUID'), rdflib.sym(\"urn:uuid:8831CBAD-1111-2222-8563-F0F4787E5398:CDGroup\"));\r\n\r\n  return rdflib.serialize(undefined, graph, urlFile, 'text/turtle');\r\n}\r\n\r\n/**\r\n * Get the acl for the inbox folder. Everyone can write but only owner can read\r\n * @param {} inboxUrl \r\n * @param {*} aclUrl \r\n * @param {*} webIdUserLoggedIn \r\n */\r\nfunction getACLInboxFolder(inboxUrl, aclUrl, webIdUserLoggedIn) {\r\n  let graph = rdflib.graph();\r\n  let owner = rdflib.sym(aclUrl + \"#Owner\");\r\n  let _public = rdflib.sym(aclUrl + \"#Public\");\r\n  let inbox = rdflib.sym(inboxUrl);\r\n  let agent = rdflib.sym(webIdUserLoggedIn);\r\n\r\n  //owner\r\n  graph.add(owner, RDF('type'), ACL('Authorization'));\r\n\r\n  graph.add(owner, ACL('accessTo'), inbox);\r\n  graph.add(owner, ACL('default'), inbox);\r\n  graph.add(owner, ACL('agent'), agent);\r\n\r\n  graph.add(owner, ACL('mode'), ACL('Control'));\r\n  graph.add(owner, ACL('mode'), ACL('Read'));\r\n  graph.add(owner, ACL('mode'), ACL('Write'));\r\n\r\n  //public\r\n  graph.add(_public, RDF('type'), ACL('Authorization'));\r\n\r\n  graph.add(_public, ACL('accessTo'), inbox);\r\n  graph.add(_public, ACL('default'), inbox);\r\n  graph.add(_public, ACL('agentClass'), FOAF(\"Agent\"));\r\n\r\n  graph.add(_public, ACL('mode'), ACL('Append'));\r\n\r\n  return rdflib.serialize(undefined, graph, aclUrl, 'text/turtle');\r\n}\r\n\r\n/**\r\n * Acl check in folder. Friend and user can read\r\n * @param {*} resourceUrl \r\n * @param {*} aclUrl \r\n * @param {*} webIdUserLoggedIn \r\n * @param {*} friendsUrl \r\n */\r\nfunction getACLSubmittersFriends(resourceUrl, aclUrl, webIdUserLoggedIn, friendsUrl) {\r\n  let graph = rdflib.graph();\r\n  let owner = rdflib.sym(aclUrl + \"#Owner\");\r\n  let group1 = rdflib.sym(aclUrl + \"#Friends\");\r\n  let resource = rdflib.sym(resourceUrl);\r\n  let agent = rdflib.sym(webIdUserLoggedIn);\r\n\r\n  //group who get acess\r\n  let fgroup1 = rdflib.sym(friendsUrl + \"#Friends\");\r\n  let fgroup2 = rdflib.sym(friendsUrl + \"#FriendsRequested\");\r\n\r\n  //owner\r\n  graph.add(owner, RDF('type'), ACL('Authorization'));\r\n\r\n  graph.add(owner, ACL('accessTo'), resource);\r\n  graph.add(owner, ACL('default'), resource);\r\n  graph.add(owner, ACL('agent'), agent);\r\n\r\n  graph.add(owner, ACL('mode'), ACL('Control'));\r\n  graph.add(owner, ACL('mode'), ACL('Read'));\r\n  graph.add(owner, ACL('mode'), ACL('Write'));\r\n\r\n  //public\r\n  graph.add(group1, RDF('type'), ACL('Authorization'));\r\n\r\n  graph.add(group1, ACL('accessTo'), resource);\r\n  graph.add(group1, ACL('default'), resource);\r\n\r\n  graph.add(group1, ACL('agentGroup'), fgroup1);\r\n  graph.add(group1, ACL('agentGroup'), fgroup2);\r\n\r\n  graph.add(group1, ACL('mode'), ACL('Read'));\r\n  graph.add(group1, ACL('mode'), ACL('Append'));\r\n\r\n  return rdflib.serialize(undefined, graph, aclUrl, 'text/turtle');\r\n}\r\n\r\n/**\r\n * Acl app file. Friend and user can read\r\n * @param {*} resourceUrl \r\n * @param {*} aclUrl \r\n * @param {*} webIdUserLoggedIn \r\n * @param {*} friendsUrl \r\n */\r\nfunction getAclAppData(resourceUrl, aclUrl, webIdUserLoggedIn, friendsUrl) {\r\n  let graph = rdflib.graph();\r\n  let owner = rdflib.sym(aclUrl + \"#Owner\");\r\n  let group1 = rdflib.sym(aclUrl + \"#Friends\");\r\n  let resource = rdflib.sym(resourceUrl);\r\n  let agent = rdflib.sym(webIdUserLoggedIn);\r\n\r\n  //group who get acess\r\n  let fgroup1 = rdflib.sym(friendsUrl + \"#Friends\");\r\n  let fgroup2 = rdflib.sym(friendsUrl + \"#FriendsRequested\");\r\n\r\n  //owner\r\n  graph.add(owner, RDF('type'), ACL('Authorization'));\r\n\r\n  graph.add(owner, ACL('accessTo'), resource);\r\n  graph.add(owner, ACL('default'), resource);\r\n  graph.add(owner, ACL('agent'), agent);\r\n\r\n  graph.add(owner, ACL('mode'), ACL('Control'));\r\n  graph.add(owner, ACL('mode'), ACL('Read'));\r\n  graph.add(owner, ACL('mode'), ACL('Write'));\r\n\r\n  //public\r\n  graph.add(group1, RDF('type'), ACL('Authorization'));\r\n\r\n  graph.add(group1, ACL('accessTo'), resource);\r\n  graph.add(group1, ACL('default'), resource);\r\n\r\n  graph.add(group1, ACL('agentGroup'), fgroup1);\r\n  graph.add(group1, ACL('agentGroup'), fgroup2);\r\n\r\n  graph.add(group1, ACL('mode'), ACL('Read'));\r\n\r\n  return rdflib.serialize(undefined, graph, aclUrl, 'text/turtle');\r\n}","class AccessError extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n\r\n        this.message = \"Access file is not correct\";\r\n    }\r\n}\r\n\r\nexport default AccessError;","import AccessError from '../../error/AccessError' \r\n\r\nconst rdfLib = require('rdflib');\r\n\r\nconst ACL = rdfLib.Namespace(\"http://www.w3.org/ns/auth/acl#\");\r\n\r\nexport function checkacess(storeProfileCard){\r\n    let blankNode = storeProfileCard.any(undefined, ACL('origin'),rdfLib.sym(\"https://ozcanseker.github.io\"));\r\n    let readAcess = storeProfileCard.match(blankNode, ACL('mode'), ACL('Read'));\r\n    let Write = storeProfileCard.match(blankNode, ACL('mode'),ACL('Write'));\r\n    let Append = storeProfileCard.match(blankNode, ACL('mode'),ACL('Append'));\r\n    let Control = storeProfileCard.match(blankNode, ACL('mode'),ACL('Control'));\r\n\r\n    if(!readAcess.length){\r\n        throw new AccessError();\r\n    }\r\n\r\n    if(!Write.length){\r\n        throw new AccessError();\r\n    }\r\n\r\n    if(!Append.length){\r\n        throw new AccessError();\r\n    }\r\n\r\n    if(!Control.length){\r\n        throw new AccessError();\r\n    }\r\n}","import { buildFolders, checkFolderIntegrity } from './PodFolderBuilder'\r\nimport { postSolidFile, putSolidFile, getUserFile, fetchFriend, getTenUserCheckIns } from \"../SolidMethods\";\r\nimport BeerCheckIn from '../../model/BeerCheckIn';\r\nimport {checkacess} from './AccessChecker'\r\n\r\nconst fileClient = require('solid-file-client');\r\nconst authClient = require('solid-auth-client');\r\nconst rdfLib = require('rdflib');\r\n\r\nconst SOLID = rdfLib.Namespace( \"http://www.w3.org/ns/solid/terms#\");\r\nconst VCARD = rdfLib.Namespace(\"http://www.w3.org/2006/vcard/ns#\");\r\nconst TERMS = rdfLib.Namespace('http://purl.org/dc/terms/');\r\nconst RDF = rdfLib.Namespace(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\");\r\nconst SOLIDLINKEDBEER = rdfLib.Namespace('https://ozcanseker.inrupt.net/solidlinkedbeer#');\r\nconst FOAF = rdfLib.Namespace('http://xmlns.com/foaf/0.1/');\r\nconst ACL = rdfLib.Namespace(\"http://www.w3.org/ns/auth/acl#\");\r\nconst PIM = rdfLib.Namespace(\"http://www.w3.org/ns/pim/space#\");\r\nconst LDP = rdfLib.Namespace('http://www.w3.org/ns/ldp#');\r\n\r\nexport async function buildSolidCommunicator(user){\r\n  //TODO do some thing parallel\r\n  //TODO check acl\r\n    let returnObject = {};\r\n\r\n    //make a named node of the session webid of the user\r\n    //namednode\r\n    const webIdNN = rdfLib.sym(user.getWebId());\r\n\r\n    //get a store of the profile card of the logged in user\r\n    //store\r\n    let storeProfileCard = await getUserCard(webIdNN.uri);\r\n\r\n    //check the acess before trying to make an application\r\n    checkacess(storeProfileCard);\r\n     \r\n    //store for the Public Profile Index\r\n    //object with store and nn\r\n    let ppiObject = await getPPILocation(webIdNN, storeProfileCard);\r\n\r\n    //String that shows the location of the public storage of the pod\r\n    //string \r\n    let storagePublic = await getStorePublic(webIdNN, storeProfileCard);     \r\n\r\n    //locatie voor de applicatie\r\n    //string\r\n    let applicationLocation = await getApplicationLocation(ppiObject.ppi , ppiObject.store, storagePublic, webIdNN.value);\r\n\r\n    //returnobject\r\n    returnObject.sc = {};\r\n    returnObject.user = {};\r\n\r\n    returnObject.user = getUserDetails(webIdNN, storeProfileCard);\r\n    let appData = await getAppData(applicationLocation);\r\n\r\n    returnObject.user = {...returnObject.user , ...appData.user};\r\n\r\n    let friendsData = await getFriends(applicationLocation);\r\n\r\n    returnObject.user.friends = friendsData.friends;\r\n    returnObject.sc.friendsStore = friendsData.friendsStore;\r\n    returnObject.sc.group = friendsData.group;\r\n    returnObject.sc.sentGroup = friendsData.sentGroup;\r\n    returnObject.sc.appStore = appData.sc.store;\r\n    returnObject.sc.blankNodeAppStore = appData.sc.blankNode;\r\n  \r\n    returnObject.user.applicationLocation = applicationLocation;\r\n\r\n    return returnObject;\r\n}\r\n\r\nfunction getUserDetails(profile, storeProfileCard){\r\n  let nameFN =  storeProfileCard.any(profile,VCARD('fn'));\r\n  let imageURL =  storeProfileCard.any(profile,VCARD('hasPhoto')); \r\n\r\n  nameFN = nameFN ? nameFN.value : undefined;\r\n  imageURL = imageURL ? imageURL.value : undefined;\r\n\r\n  return {name: nameFN, imageURL: imageURL};\r\n}\r\n\r\nasync function getUserCard(webIdUrl){\r\n    const profileCardTTl = await fileClient.fetch(webIdUrl); \r\n    const storeProfileCard = rdfLib.graph(); \r\n    rdfLib.parse(profileCardTTl, storeProfileCard, webIdUrl, \"text/turtle\");\r\n    \r\n    return storeProfileCard;\r\n}\r\n\r\nasync function getPPILocation(profile, storeProfileCard){\r\n    const publicProfileIndex = storeProfileCard.any(profile, SOLID(\"publicTypeIndex\"));\r\n    \r\n    const storePublicTypeIndex = rdfLib.graph();\r\n    const publicTypeIndexTTL = await fileClient.fetch(publicProfileIndex.value);\r\n    rdfLib.parse(publicTypeIndexTTL, storePublicTypeIndex, publicProfileIndex.value, \"text/turtle\");\r\n    \r\n    return {store : storePublicTypeIndex, ppi : publicProfileIndex};\r\n}\r\n\r\nfunction getStorePublic(profile, storeProfileCard){\r\n    let locationStorage = storeProfileCard.any(profile, PIM(\"storage\"));\r\n    return locationStorage.value + \"public/\";\r\n}\r\n\r\nasync function getApplicationLocation(publicProfileIndex, storePublicProfileIndex, storagePublic, webId){\r\n    let app = rdfLib.sym(publicProfileIndex.value + \"#SocialLinkedBeer\");\r\n    let appQuery = storePublicProfileIndex.any(app, SOLID(\"instance\"));\r\n\r\n    if(appQuery){\r\n      checkFolderIntegrity();\r\n      return appQuery.value;\r\n    }else{\r\n        return await buildFolders(publicProfileIndex, storePublicProfileIndex, storagePublic, app, webId);\r\n    }\r\n}\r\n\r\nasync function getAppData(url){\r\n  //TODO one place to save all urls\r\n  let appdataLocation = url + 'beerdrinker/appdata.ttl';\r\n\r\n  let appdatattl = await fileClient.readFile(appdataLocation);\r\n  let graph = rdfLib.graph();\r\n  rdfLib.parse(appdatattl, graph, appdataLocation, \"text/turtle\");\r\n\r\n  let blankNode = graph.any(undefined, SOLIDLINKEDBEER('startdate'));\r\n\r\n  let startdate = graph.any(blankNode, SOLIDLINKEDBEER('startdate'));\r\n  let points = graph.any(blankNode, SOLIDLINKEDBEER('points'));\r\n  \r\n  return {user: {startdate: startdate.value, points: points.value}, sc:{store: graph, blankNode: blankNode}}\r\n}\r\n\r\n async function getFriends(applicationLocation){\r\n  let friendsLocation = applicationLocation + 'beerdrinker/friends.ttl';\r\n  let ttlFriends = await fileClient.readFile(friendsLocation);\r\n  let group = rdfLib.sym(friendsLocation + \"#Friends\");\r\n  let sentGroup = rdfLib.sym(friendsLocation + \"#FriendsRequested\");\r\n\r\n  let friends = [];\r\n\r\n  let graph = rdfLib.graph();\r\n  rdfLib.parse(ttlFriends, graph, friendsLocation, \"text/turtle\");\r\n\r\n  let query = graph.each(group, VCARD('hasMember'), undefined); \r\n\r\n  for (let index = 0; index < query.length; index++) {\r\n    let friend = await fetchFriend(query[index].value);\r\n\r\n    if(friend){\r\n      friends.push(friend);\r\n    }\r\n  }\r\n\r\n  return {friends: friends, friendsStore: graph, group: group, sentGroup: sentGroup};\r\n}\r\n ","import { postSolidFile, putSolidFile, getUserFile, fetchFriend } from \"../SolidMethods\";\r\nimport Friend from '../../model/Friend'\r\n\r\nconst fileClient = require('solid-file-client');\r\nconst rdfLib = require('rdflib');\r\n\r\nconst VCARD = rdfLib.Namespace(\"http://www.w3.org/2006/vcard/ns#\");\r\nconst SOLIDLINKEDBEER = rdfLib.Namespace('https://ozcanseker.inrupt.net/solidlinkedbeer#');\r\n\r\nexport async function preApplicationHandelings(applicationFolder, scValues, user){\r\n    let inbox = applicationFolder + \"inbox/\";\r\n    let inboxContent = await fileClient.readFolder(inbox);\r\n\r\n    //add friend from friend requested to friends\r\n    let acceptedRequests = inboxContent.files.filter(file => {\r\n        return file.name.includes(\"Social_Linked_Beer_FriendschipRequestAccepted\");\r\n    })\r\n    \r\n    //delete user from friends requested if they declined\r\n    let declinedRequests = inboxContent.files.filter(file => {\r\n        return file.name.includes(\"Social_Linked_Beer_FriendschipRequestDecline\");\r\n    })\r\n    \r\n    if(acceptedRequests.length != 0){\r\n        await checkAcceptedFriendShipRequests(applicationFolder, acceptedRequests, scValues, user);\r\n    }\r\n\r\n    if(declinedRequests.length != 0){\r\n        await checkDeclinedFriendShipRequests(applicationFolder, declinedRequests, scValues);\r\n    }\r\n}\r\n\r\n/**\r\n * Check if there are accepted friendschip requests\r\n * @param {*} applicationFolder \r\n * @param {*} acceptedRequests \r\n * @param {*} scValues \r\n * @param {*} user \r\n */\r\nasync function checkAcceptedFriendShipRequests(applicationFolder,acceptedRequests, scValues, user){\r\n    //get some values\r\n    let postLocation = applicationFolder + 'friends.ttl';\r\n    let friendGraph = scValues.friendsStore;\r\n    let friendsGroup = scValues.group;\r\n    let friendsSent = scValues.sentGroup;\r\n\r\n    for(let i = 0; i < acceptedRequests.length; i++){\r\n        //make a graph and get file\r\n        let graph = rdfLib.graph();\r\n        let filettl = await fileClient.readFile(acceptedRequests[i].url);\r\n        rdfLib.parse(filettl, graph, acceptedRequests[i].url, \"text/turtle\");\r\n\r\n        //get the blanknode from the message\r\n        let friend = graph.any(undefined, SOLIDLINKEDBEER('from'));\r\n        friend = graph.any(friend, SOLIDLINKEDBEER('from'));\r\n\r\n        //add from friend requested to friend\r\n        friendGraph.add(friendsGroup, VCARD('hasMember'), friend);\r\n        friendGraph.removeMatches(friendsSent, VCARD('hasMember'), friend);\r\n\r\n        //get the friend from the internet\r\n        let friendFile = await fetchFriend(friend.value);\r\n\r\n        //adding friend\r\n        user.addFriend(friendFile);\r\n\r\n        //delete the original message\r\n        await fileClient.deleteFile(acceptedRequests[i].url);\r\n    }\r\n\r\n    //update the original friend file\r\n    let friendsTtl = await rdfLib.serialize(undefined, friendGraph, postLocation, 'text/turtle');\r\n    //TODO post new file for user so that he know friendship is accepted\r\n    //TODO delete afterwards\r\n    putSolidFile(postLocation, friendsTtl);\r\n}\r\n\r\nasync function checkDeclinedFriendShipRequests(applicationFolder,declinedRequests, scValues){\r\n    let postLocation = applicationFolder + 'friends.ttl';\r\n    let friendGraph = scValues.friendsStore;\r\n    let friendsSent = scValues.sentGroup;\r\n    \r\n    for(let i = 0; i < declinedRequests.length; i++){\r\n        let graph = rdfLib.graph();\r\n        let filettl = await fileClient.readFile(declinedRequests[i].url);\r\n        \r\n        rdfLib.parse(filettl, graph, declinedRequests[i].url, \"text/turtle\");\r\n\r\n        //get blank node from friend sent\r\n        let friend = graph.any(undefined, SOLIDLINKEDBEER('from'));\r\n        friend = graph.any(friend, SOLIDLINKEDBEER('from'));\r\n\r\n        //remove friend from the friendssent file\r\n        friendGraph.removeMatches(friendsSent, VCARD('hasMember'), friend);\r\n        \r\n        //delete the message        \r\n        await fileClient.deleteFile(declinedRequests[i].url);\r\n    }\r\n\r\n    //post new friend solid file\r\n    let friendsTtl = await rdfLib.serialize(undefined, friendGraph, postLocation, 'text/turtle');\r\n    putSolidFile(postLocation, friendsTtl);\r\n\r\n    //TODO post new file for user so that he know friendship is declined\r\n    //TODO delete afterwards\r\n}","const rdfLib = require('rdflib');\r\n\r\nconst SOLID = rdfLib.Namespace( \"http://www.w3.org/ns/solid/terms#\");\r\nconst PIM = rdfLib.Namespace(\"http://www.w3.org/ns/pim/space#\");\r\nconst VCARD = rdfLib.Namespace(\"http://www.w3.org/2006/vcard/ns#\");\r\nconst TERMS = rdfLib.Namespace('http://purl.org/dc/terms/');\r\nconst RDF = rdfLib.Namespace(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\");\r\nconst SOLIDLINKEDBEER = rdfLib.Namespace('https://ozcanseker.inrupt.net/solidlinkedbeer#');\r\nconst FOAF = rdfLib.Namespace('http://xmlns.com/foaf/0.1/');\r\nconst LDP = rdfLib.Namespace('http://www.w3.org/ns/ldp#');\r\n\r\nexport function getInviteToLSBInvitation(urlInvitee, invitation, postLocation, userWebId){\r\n    let graph = rdfLib.graph();\r\n    let blankNode = rdfLib.blankNode();\r\n\r\n    graph.add(blankNode, RDF('type'), SOLIDLINKEDBEER('Invitation'));\r\n    graph.add(blankNode, SOLIDLINKEDBEER('invitationTo'), rdfLib.sym('https://ozcanseker.github.io/Social-linked-beer/'));\r\n    graph.add(blankNode, SOLIDLINKEDBEER('from'), rdfLib.sym(userWebId));\r\n    graph.add(blankNode, SOLIDLINKEDBEER('to'), rdfLib.sym(urlInvitee));\r\n    graph.add(blankNode, SOLIDLINKEDBEER('description'), invitation);\r\n\r\n    return rdfLib.serialize(undefined, graph, postLocation, 'text/turtle');\r\n}\r\n\r\nexport function getFriendShipRequest(urlInvitee, invitation, postLocation, userWebId){\r\n    //make friendrequest\r\n    let graph = rdfLib.graph();\r\n    let blankNode = rdfLib.blankNode();\r\n\r\n    graph.add(blankNode, RDF('type'), SOLIDLINKEDBEER('FriendshipRequest'));\r\n    graph.add(blankNode, SOLIDLINKEDBEER('from'), rdfLib.sym(userWebId));\r\n    graph.add(blankNode, SOLIDLINKEDBEER('to'), rdfLib.sym(urlInvitee));\r\n    graph.add(blankNode, SOLIDLINKEDBEER('description'), invitation);\r\n\r\n    return rdfLib.serialize(undefined, graph, postLocation, 'text/turtle');\r\n}\r\n\r\nexport function getDeclineFriendshipRequest(from , invitation, postLocation, userWebId){\r\n    let graph = rdfLib.graph();\r\n    let blankNode = rdfLib.blankNode();\r\n\r\n    graph.add(blankNode, RDF('type'), SOLIDLINKEDBEER('FriendschipRequestDecline'));\r\n    graph.add(blankNode, SOLIDLINKEDBEER('from'), rdfLib.sym(userWebId));\r\n    graph.add(blankNode, SOLIDLINKEDBEER('to'), rdfLib.sym(from));\r\n    graph.add(blankNode, SOLIDLINKEDBEER('description'), invitation);\r\n\r\n    return rdfLib.serialize(undefined, graph, postLocation, 'text/turtle');\r\n}\r\n\r\nexport function getAcceptFriendshipRequest(from, description , postLocation, userWebId){\r\n    let graph = rdfLib.graph();\r\n    let blankNode = rdfLib.blankNode();\r\n\r\n    graph.add(blankNode, RDF('type'), SOLIDLINKEDBEER('FriendschipRequestAccepted'));\r\n    graph.add(blankNode, SOLIDLINKEDBEER('from'), rdfLib.sym(userWebId));\r\n    graph.add(blankNode, SOLIDLINKEDBEER('to'), rdfLib.sym(from));\r\n    graph.add(blankNode, SOLIDLINKEDBEER('description'), description);\r\n\r\n    //make a text file and send\r\n    return rdfLib.serialize(undefined, graph, postLocation, 'text/turtle');\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} postLocation \r\n * @param {string} userName \r\n * @param {string} webId \r\n * @param {url to webresresource} beerLocation \r\n * @param {string} beerName \r\n * @param {Date} time \r\n */\r\nexport function beerCheckInTemplate(postLocation, userName, webId, beerLocation, beerName, time){\r\n    let graph = rdfLib.graph();\r\n    let namedNode = rdfLib.sym(postLocation);\r\n\r\n    graph.add(namedNode, RDF('type'), SOLIDLINKEDBEER('CheckIn'));\r\n    graph.add(namedNode, SOLIDLINKEDBEER('webId'), rdfLib.sym(webId));\r\n    if(userName){\r\n        graph.add(namedNode, SOLIDLINKEDBEER('username'), userName);\r\n    }\r\n    graph.add(namedNode, SOLIDLINKEDBEER('beerLocation'), rdfLib.sym(beerLocation));\r\n    graph.add(namedNode, SOLIDLINKEDBEER('beerName'), beerName);\r\n    graph.add(namedNode, SOLIDLINKEDBEER('checkInTime'), time);    \r\n\r\n    // //make a text file and send\r\n    return rdfLib.serialize(undefined, graph, postLocation, 'text/turtle');\r\n}\r\n\r\nexport function beerReviewInTemplate(postLocation, userName, webId, beerLocation, beerName, time, rating, review){\r\n    let graph = rdfLib.graph();\r\n    let namedNode = rdfLib.sym(postLocation);\r\n\r\n    graph.add(namedNode, RDF('type'), SOLIDLINKEDBEER('CheckReview'));\r\n    graph.add(namedNode, SOLIDLINKEDBEER('webId'), rdfLib.sym(webId));\r\n    if(userName){\r\n        graph.add(namedNode, SOLIDLINKEDBEER('username'), userName);\r\n    }\r\n    graph.add(namedNode, SOLIDLINKEDBEER('beerLocation'), rdfLib.sym(beerLocation));\r\n    graph.add(namedNode, SOLIDLINKEDBEER('beerName'), beerName);\r\n    graph.add(namedNode, SOLIDLINKEDBEER('checkInTime'), time);    \r\n    graph.add(namedNode, SOLIDLINKEDBEER('rating'), rating);    \r\n    graph.add(namedNode, SOLIDLINKEDBEER('review'), review);    \r\n\r\n\r\n    // //make a text file and send\r\n    return rdfLib.serialize(undefined, graph, postLocation, 'text/turtle');\r\n\r\n}","class Brewer {\r\n\r\n    constructor(name, groep, opgericht, owners, provincie, email, taxID, telephone, url, postalCode, streetAddress, addressRegion, addressLocality){\r\n        this._name = name;\r\n        this._groep = groep;\r\n        this._opgericht = opgericht;\r\n        this._owners = owners;\r\n        this._provincie = provincie;\r\n        this._email = email;\r\n        this._taxid = taxID;\r\n        this._telephone = telephone;\r\n        this._url = url;\r\n        this._postalcode = postalCode;\r\n        this._streetAdress = streetAddress;\r\n        this._addressRegion = addressRegion;\r\n        this._addressLocality = addressLocality;\r\n        this._beers = [];\r\n\r\n        this._subscribers = [];\r\n    }\r\n\r\n    addBeers(beers){\r\n        this._beers = this._beers.concat(beers);\r\n        this.upDateSubScribers();\r\n    }\r\n\r\n    upDateSubScribers(){\r\n        this._subscribers.map(subscriber => subscriber.update());\r\n    }\r\n\r\n    subscribe(subscriber){\r\n        this._subscribers.push(subscriber);\r\n    }\r\n\r\n    unsubscribe(subscriber){\r\n        this._subscribers.filter(subscriberList  => {\r\n            return subscriberList !== subscriber;\r\n        });\r\n    }\r\n}\r\n\r\nexport default Brewer;","import {postSolidFile, putSolidFile, getUserFile, fetchFriend, getTenUserCheckIns} from \"./SolidMethods\";\r\nimport Beer from '../model/Beer'\r\nimport BeerCheckIn from '../model/BeerCheckIn'\r\nimport { buildSolidCommunicator } from './solidCommunicatorInits/SolidCommunicatorBuilder'\r\nimport { preApplicationHandelings } from './solidCommunicatorInits/PreApplicationHandelings'\r\nimport * as SolidTemplates from './rdf/SolidTtlTemplates';\r\nimport Brewer from \"../model/Brewer\";\r\n\r\nconst fileClient = require('solid-file-client');\r\nconst authClient = require('solid-auth-client');\r\nconst rdfLib = require('rdflib');\r\n\r\nconst SOLID = rdfLib.Namespace(\"http://www.w3.org/ns/solid/terms#\");\r\nconst PIM = rdfLib.Namespace(\"http://www.w3.org/ns/pim/space#\");\r\nconst VCARD = rdfLib.Namespace(\"http://www.w3.org/2006/vcard/ns#\");\r\nconst TERMS = rdfLib.Namespace('http://purl.org/dc/terms/');\r\nconst RDF = rdfLib.Namespace(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\");\r\nconst SOLIDLINKEDBEER = rdfLib.Namespace('https://ozcanseker.inrupt.net/solidlinkedbeer#');\r\nconst FOAF = rdfLib.Namespace('http://xmlns.com/foaf/0.1/');\r\nconst LDP = rdfLib.Namespace('http://www.w3.org/ns/ldp#');\r\nconst DBPEDIA = rdfLib.Namespace('http://dbeerpedia.com/def#');\r\nconst SCHEMA = rdfLib.Namespace('http://schema.org/');\r\n\r\nconst BEERREVIEWFILENAME = \"_BeerReview\";\r\nconst BEERCHECKINFILENAME = \"_BeerCheckIn\"\r\n\r\nclass SolidCommunicator {\r\n  /**\r\n   * Build the solid communicator\r\n   * @param {*} user \r\n   */\r\n  static async build(user) {\r\n    let values = await buildSolidCommunicator(user);\r\n\r\n    user.setName(values.user.name);\r\n    user.setImageUrl(values.user.imageURL);\r\n    user.addFriends(values.user.friends);\r\n    user.setBeerPoints(values.user.points);\r\n    user.setBeginDate(new Date(values.user.startdate));\r\n    user.setApplicationLocation(values.user.applicationLocation + \"beerdrinker/\");\r\n\r\n    getTenUserCheckIns(values.user.applicationLocation).then(res => {\r\n      user.addUserCheckIns(res.userBeerCheckIns);\r\n      user.setBeerReviews(res.reviews);\r\n      user.setCheckIns(res.checkIns);\r\n    });\r\n\r\n    await preApplicationHandelings(user.getApplicationLocation(), values.sc, user);\r\n\r\n    //make new solidCommunicator\r\n    let solidCommunicator = new SolidCommunicator(user, values.sc);\r\n\r\n    return solidCommunicator;\r\n  }\r\n\r\n  constructor(user, values) {\r\n    this._friendsStore = values.friendsStore;\r\n    this._friendGroup = values.group;\r\n    this._friendsRequested = values.sentGroup;\r\n\r\n    this._appStore = values.appStore;\r\n    this._blankNodeAppStore = values.blankNodeAppStore;\r\n\r\n    //user\r\n    this._user = user;\r\n\r\n    this._applocation = user.getApplicationLocation();\r\n    this._checkInFolder = this._applocation + 'checkins/';\r\n    this._appStoreLocation = this._applocation + 'appdata.ttl'\r\n  }\r\n\r\n  /**\r\n   * Get an user file \r\n   * @param {*} url \r\n   */\r\n  async getUserFile(url) {\r\n    return await getUserFile(url);\r\n  }\r\n\r\n  /**\r\n   * Check if user is already friend\r\n   * @param {*} url \r\n   */\r\n  async getInboxContents() {\r\n    let inbox = this._user.getApplicationLocation() + \"inbox/\"\r\n    let res = await fileClient.readFolder(inbox);\r\n    let files = [];\r\n\r\n    for (let index = 0; index < res.files.length; index++) {\r\n      let file = await this.fetchFile(res.files[index].url);\r\n      files.push(file);\r\n    }\r\n\r\n    return files;\r\n  }\r\n\r\n  async fetchFile(url) {\r\n    let graph = rdfLib.graph();\r\n    let fileTTL = await fileClient.readFile(url);\r\n\r\n    await rdfLib.parse(fileTTL, graph, url, \"text/turtle\");\r\n\r\n    let blanknode = graph.any(undefined, RDF('type'));\r\n\r\n    let type = graph.any(blanknode, RDF('type'));\r\n    let description = graph.any(blanknode, SOLIDLINKEDBEER('description'));\r\n    let from = graph.any(blanknode, SOLIDLINKEDBEER('from'));\r\n\r\n    let file = {\r\n      type: type.value.replace(/.*#/, \"\"),\r\n      from: from.value,\r\n      description: description.value,\r\n      url: url\r\n    }\r\n\r\n    return file;\r\n  }\r\n\r\n  checkIfUserIsFriend(url) {\r\n    let query1 = this._friendsStore.match(this._friendsRequested, VCARD('hasMember'), rdfLib.sym(url));\r\n    let query2 = this._friendsStore.match(this._friendGroup, VCARD('hasMember'), rdfLib.sym(url));\r\n\r\n    if (query1.length !== 0 || query2.length !== 0) {\r\n      console.log(\"already friend\");\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n   /**\r\n   * Send invitation to user for the application\r\n   * @param {*} urlInvitee \r\n   * @param {*} inbox \r\n   */\r\n  async inviteUserToSolib(urlInvitee, inbox) {\r\n    //name for file\r\n    let fileName = \"Social_Linked_Beer_invation_\" + (this._user.getName ? \"from_\" + this._user.getName() : \"\")\r\n    let invitation = (this._user.getName() ? this._user.getName() : this._user.getWebId()) + \" invites you to drink a beer with him on https://ozcanseker.github.io/Social-linked-beer/ .\";\r\n\r\n    //name of the location where it will be posted\r\n    let postLocation = inbox + fileName + \".ttl\";\r\n\r\n    //get ttl file for invitation\r\n    let invitationTTL = SolidTemplates.getInviteToLSBInvitation(urlInvitee, invitation, postLocation, this._user.getWebId());\r\n\r\n    await postSolidFile(inbox, fileName, invitationTTL);\r\n  }\r\n\r\n  /**\r\n   * Sends a friendship request to user\r\n   * @param {*} urlInvitee \r\n   * @param {*} appLocation \r\n   */\r\n  async sendFriendshipRequest(urlInvitee, appLocation) {\r\n    if (!this.checkIfUserIsFriend(urlInvitee)) {\r\n      //get url without https and profile card.me\r\n      let fileNameName = this._user.getWebId().replace(\"https://\", \"\").replace(/\\/.*/, \"\");\r\n\r\n      //make a file name\r\n      let fileName = \"Social_Linked_Beer_invation_from_\" + fileNameName;\r\n\r\n      //the invitation\r\n      let invitation = (this._user.getName() ? this._user.getName() : this._user.getWebId()) + \" invites you to share your stories with him.\";\r\n      \r\n      //locations to be posted\r\n      let location = appLocation + \"beerdrinker/inbox\";\r\n      let postLocation = location + fileName + \".ttl\";\r\n\r\n      //the ttl file\r\n      let invitationTTL = SolidTemplates.getFriendShipRequest(urlInvitee, invitation, postLocation, this._user.getWebId());\r\n\r\n      //add friend to friend request send\r\n      let friendsFile = this._user.getApplicationLocation() + 'friends.ttl';\r\n      this._friendsStore.add(this._friendsRequested, VCARD('hasMember'), rdfLib.sym(urlInvitee));\r\n      let friendsTTL = await rdfLib.serialize(undefined, this._friendsStore, friendsFile, 'text/turtle');\r\n\r\n      // send files\r\n      await postSolidFile(location, fileName, invitationTTL);\r\n      await putSolidFile(friendsFile, friendsTTL);\r\n    }\r\n  }\r\n\r\n  async declineFriendSchipRequest(message) {\r\n    //send a declined friendship request to other pod\r\n    let result = await this.getUserFile(message.from);\r\n    let inbox = result.appLocation + 'beerdrinker/inbox/';\r\n\r\n    //get file name and description string\r\n    let fileNameName = this._user.getWebId().replace(\"https://\", \"\").replace(/\\/.*/, \"\");\r\n    let fileName = \"Social_Linked_Beer_FriendschipRequestDecline_from_\" + fileNameName;\r\n    let invitation = (this._user.getName() ? this._user.getName() : this._user.getWebId()) + \" declined your friendship request.\";\r\n\r\n    //get the location is will be posted to\r\n    let postLocation = inbox + fileName + \".ttl\";\r\n\r\n    //make a text file and send\r\n    let declineTTL = SolidTemplates.getDeclineFriendshipRequest(message.from, invitation, postLocation, this._user.getWebId());\r\n\r\n    //delete friendship request from own pod\r\n    await postSolidFile(inbox, fileName, declineTTL);\r\n    await fileClient.deleteFile(message.url);\r\n  }\r\n\r\n  async acceptFriendSchipRequest(message) {\r\n    //get user\r\n    let friend = await fetchFriend(message.from);\r\n    let inbox = friend.getApplocation() + 'beerdrinker/inbox/';\r\n\r\n    //add user as friend\r\n    let friendsFile = this._user.getApplicationLocation() + 'friends.ttl';\r\n    this._friendsStore.add(this._friendGroup, VCARD('hasMember'), rdfLib.sym(message.from));\r\n    let friendsTTL = await rdfLib.serialize(undefined, this._friendsStore, friendsFile, 'text/turtle');\r\n\r\n    //get file name and description string\r\n    let fileNameName = this._user.getWebId().replace(\"https://\", \"\").replace(/\\/.*/, \"\");\r\n    let fileName = \"Social_Linked_Beer_FriendschipRequestAccepted_from_\" + fileNameName;\r\n    let description = (this._user.getName() ? this._user.getName() : this._user.getWebId()) + \" accepted your friendship request.\";\r\n\r\n    //get the location is will be posted to\r\n    let postLocation = inbox + fileName + \".ttl\";\r\n    \r\n    //make a text file and send\r\n    let acceptedTTL = SolidTemplates.getAcceptFriendshipRequest(message.from, description, postLocation, this._user.getWebId());\r\n\r\n    //send friendship accepted to user\r\n    await postSolidFile(inbox, fileName, acceptedTTL);\r\n    //delete friendship request from own pod      \r\n    await fileClient.deleteFile(message.url);\r\n    //update FriendsFile\r\n    await putSolidFile(friendsFile, friendsTTL);\r\n\r\n    this._user.addFriends(friend);\r\n  }\r\n\r\n  async fetchBeerData() {\r\n    let url = \"https://testbrouwer.inrupt.net/public/brewerInformation/beers/beersIndex.ttl\";\r\n    let beersIndexTTl = await fileClient.readFile(url);\r\n    \r\n    let graph = rdfLib.graph();\r\n    rdfLib.parse(beersIndexTTl, graph, url, \"text/turtle\");\r\n\r\n    let query = graph.each(undefined, RDF('type') ,SOLIDLINKEDBEER('Beer'));\r\n    let beers = []; \r\n    query.forEach(blankNode => {\r\n      let brewer = graph.any(blankNode, SOLIDLINKEDBEER('brewedBy'));\r\n      let type = graph.any(blankNode, SOLIDLINKEDBEER('type'));\r\n      let name = graph.any(blankNode, SCHEMA('name'));\r\n      let style = graph.any(blankNode, SOLIDLINKEDBEER('style'));\r\n      let location = graph.any(blankNode, SOLID('instance'));\r\n      \r\n      beers.push(new Beer(name.value, type.value, style.value, brewer.value, location.value));\r\n    })\r\n\r\n    return beers;\r\n  }\r\n\r\n  async fetchBeer(url, beer) {\r\n    let beerTTl = await fileClient.readFile(url);\r\n    \r\n    let graph = rdfLib.graph();\r\n    rdfLib.parse(beerTTl, graph, url, \"text/turtle\");\r\n    \r\n    let blankNode = graph.any(undefined, SOLIDLINKEDBEER('beerDescription'));\r\n\r\n    let brewer = graph.any(blankNode, SOLIDLINKEDBEER('brewedBy'));\r\n    let type = graph.any(blankNode, SOLIDLINKEDBEER('type'));\r\n    let name = graph.any(blankNode, SCHEMA('name'));\r\n    let style = graph.any(blankNode, SOLIDLINKEDBEER('style'));\r\n    let description = graph.any(blankNode, SOLIDLINKEDBEER('beerDescription'));\r\n    let containers= [];\r\n    graph.each(blankNode, SOLIDLINKEDBEER('container')).forEach(container => {\r\n      containers.push(container.value);\r\n    });\r\n    \r\n    beer.updateInformation(name.value, type.value, style.value, brewer.value, description.value, containers);\r\n    return beer;\r\n  }\r\n\r\n  async postBeerReview(hasReview, beer, rating, review){\r\n    let ttlFile;\r\n\r\n    let date = new Date();\r\n\r\n    let checkingFolder =  this._checkInFolder;\r\n    let filename;\r\n    let postLocation = checkingFolder + filename + \".ttl\";\r\n\r\n    if(hasReview){\r\n      filename =  date.getTime() + BEERREVIEWFILENAME;\r\n      postLocation = checkingFolder + filename + \".ttl\";\r\n      ttlFile = SolidTemplates.beerReviewInTemplate(postLocation, this._user.getName(), this._user.getWebId(), beer._location, beer._name, date, rating, review);\r\n\r\n      this._user.addBeerReviews();\r\n      this._user.addBeerPoints(10);\r\n      this.sendBeerPoints(10);\r\n    }else{\r\n      filename =  date.getTime() + BEERCHECKINFILENAME;\r\n      postLocation = checkingFolder + filename + \".ttl\";\r\n      ttlFile = SolidTemplates.beerCheckInTemplate(postLocation, this._user.getName(), this._user.getWebId(), beer._location, beer._name, date);\r\n\r\n      this._user.addCheckIn();\r\n      this._user.addBeerPoints(5);\r\n      this.sendBeerPoints(5);\r\n    }\r\n\r\n    await postSolidFile(checkingFolder, filename, ttlFile);\r\n    this._user.addUserCheckIns([new BeerCheckIn(postLocation, this._user.getWebId(), this._user.getName(), beer._location, beer._name, date.getUTCDate(), rating, review)]);\r\n  }\r\n\r\n  async sendBeerPoints(amount){\r\n    let beerPointsQueryNow = this._appStore.any(this._blankNodeAppStore, SOLIDLINKEDBEER(\"points\"));\r\n    beerPointsQueryNow.value = parseInt(beerPointsQueryNow.value) + amount + \"\";\r\n\r\n    let appTTL = await rdfLib.serialize(undefined, this._appStore, this._appStoreLocation, 'text/turtle');\r\n    putSolidFile(this._appStoreLocation, appTTL);\r\n  }\r\n\r\n  async getBrewerInformation(url){\r\n    let brewerTTl = await fileClient.fetch(url);\r\n\r\n    let graph = rdfLib.graph();\r\n    await rdfLib.parse(brewerTTl, graph, url, \"text/turtle\");\r\n\r\n    let blankNode = graph.any(undefined, RDF('type'));\r\n\r\n    let name = graph.any(blankNode, FOAF(\"name\")).value;\r\n    let groep = graph.any(blankNode, DBPEDIA(\"groep\")).value;\r\n    let opgericht = graph.any(blankNode, DBPEDIA(\"opgericht\")).value;\r\n    let owners = [];\r\n    graph.each(blankNode, DBPEDIA(\"owners\")).forEach(owner => {\r\n      owners.push(owner.value);\r\n    })\r\n    let provincie = graph.any(blankNode, DBPEDIA(\"provincie\")).value;\r\n    let email = graph.any(blankNode, SCHEMA(\"email\")).value;\r\n    let taxid =  graph.any(blankNode, SCHEMA(\"taxID\")).value;\r\n    let telephone = graph.any(blankNode, SCHEMA(\"telephone\")).value;\r\n    let brewerUrl = graph.any(blankNode, SCHEMA(\"url\")).value;\r\n    let beerIndex = graph.any(blankNode, DBPEDIA('beersIndex'));\r\n\r\n    let blankNodeAdress = graph.any(blankNode, SCHEMA(\"address\"));\r\n\r\n    let postalcode = graph.any(blankNodeAdress, SCHEMA(\"postalCode\")).value;\r\n    let streetaddress = graph.any(blankNodeAdress, SCHEMA(\"streetAddress\")).value;\r\n    let addressregion = graph.any(blankNodeAdress, SCHEMA(\"addressRegion\")).value;\r\n    let addresslocality = graph.any(blankNodeAdress, SCHEMA(\"addressLocality\")).value;\r\n\r\n    let brewer = new Brewer(name,\r\n        groep,\r\n        opgericht,\r\n        owners,\r\n        provincie,\r\n        email,\r\n        taxid,\r\n        telephone,\r\n        brewerUrl,\r\n        postalcode,\r\n        streetaddress,\r\n        addressregion,\r\n        addresslocality);\r\n\r\n    this.fetchBeerData(beerIndex.value).then( res => {\r\n      brewer.addBeers(res);\r\n    });\r\n\r\n    return brewer;\r\n  }\r\n\r\n  async getAllCheckIns(){\r\n\r\n  }\r\n}\r\nexport default SolidCommunicator;","import React from 'react';\r\nimport '../css/NavBar.scss'\r\n\r\nclass NavBar extends React.Component{\r\n    onInput = (e) => {\r\n        this.props.onBeerSearch(e.target.value);\r\n    }\r\n\r\n    render(){\r\n        let cldn =React.Children.toArray( this.props.children);\r\n        let input;\r\n\r\n        cldn = cldn.map((child, index) => {            \r\n            if(index !== cldn.length - 1){\r\n                return (\r\n                    <li key = {child.props.to} className = \"navBarOptionContainer\">\r\n                        {child}\r\n                    </li>\r\n                )\r\n            }else{\r\n                return(\r\n                    <li key = {child.props.to} className = \"navBarOptionContainerLast\">\r\n                        {child}\r\n                    </li>\r\n                )\r\n            }            \r\n        });\r\n\r\n        if(this.props.loggedIn){\r\n            input = (<li className = \"navBarSearch\">\r\n                <input  placeholder = \"search for beers\" value = {this.props.searchQuery} onChange = {this.onInput} />\r\n                <input type = \"button\" value = \"x\" onClick = {this.props.onSearchBarButtonClick}/>\r\n            </li>)\r\n        }\r\n\r\n        return(\r\n            <nav>\r\n                <ul id = \"navBar\">\r\n                    {cldn}\r\n                    {input}\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport Knipsel from '../../assets/Knipsel.png'\r\nimport '../css/Home.scss'\r\n\r\nclass Home extends React.Component{\r\n    render(){\r\n        return(\r\n            <section className = \"home\">\r\n                <h3>\r\n                    This is an application that is powered by Solid.<br/> \r\n                    Log in with your pod to use the application\r\n                </h3>\r\n                <br/>\r\n                <img src= {Knipsel} alt = \"Inrupt logo\"/>\r\n                <br/>\r\n                <h3 style = {{color : \"red\"}}>\r\n                    Carefull, This application is still in development and might mess up your pod.\r\n                    if you want to test it out, I recommend you make a new pod that you can delete\r\n                </h3>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport '../css/LogIn.scss'\r\n\r\nimport solidAuth from 'solid-auth-client'\r\n\r\nclass LogIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loginAsBrewer: false\r\n        }\r\n    }\r\n\r\n    onChangeCheckBox = () => {\r\n        this.setState({\r\n            loginAsBrewer: !this.state.loginAsBrewer\r\n        })\r\n    }\r\n\r\n    onButtonClick = () => {\r\n        let popupUri = './popup.html';\r\n        solidAuth.popupLogin({ popupUri }).then(() => {\r\n            solidAuth.currentSession().then(session => {\r\n                this.props.onLoggedIn();\r\n                this.props.history.push(`/profile`)\r\n            })\r\n        })\r\n    }\r\n\r\n    onRegisterClick = () => {\r\n        window.location.assign('https://inrupt.net/');\r\n    }\r\n\r\n    render() {\r\n        let typeLogIn;\r\n\r\n        if (this.state.loginAsBrewer) {\r\n            typeLogIn = <h1>Brewer</h1>\r\n        } else {\r\n            typeLogIn = <h1>Beer Drinker</h1>\r\n        }\r\n\r\n        let activeClass = this.state.loginAsBrewer ? \"logInBrewer\" : \"logInBeerDrinker\";\r\n\r\n        return (\r\n            <section className={[\"logInScreen \", activeClass].join(' ')}>\r\n                <div className=\"loginField\">\r\n                    {typeLogIn}\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" onChange={this.onChangeCheckBox} />\r\n                        <span className=\"slider\"></span>\r\n                    </label>\r\n\r\n                    <br />\r\n                    <div>\r\n                        <button onClick = {this.onRegisterClick}>Register</button>\r\n                        <button onClick = {this.onButtonClick}>Log in</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LogIn;\r\n","import React from 'react';\r\n\r\nclass Groups extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <h1>\r\n                Groups\r\n            </h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Groups;\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport '../css/Friends.scss'\r\n\r\nclass Friends extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            inputText : \"\",\r\n            error : undefined\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            inputText: e.target.value\r\n        })        \r\n    }\r\n\r\n    onButtonClick = async () => {\r\n        let friends = this.props.user.getFriends();\r\n        friends = friends.filter(friend => {\r\n            let text = this.state.inputText.toUpperCase();\r\n            let friendUri = friend.getUri().toUpperCase();\r\n            let friendUri2 = friend.getUri().toUpperCase().replace(\"#ME\", \"\").replace(\"#I\", \"\");\r\n            let friendUri3 = friendUri.replace(\"HTTPS://\", \"\");\r\n            let friendUri4 = friendUri2.replace(\"HTTPS://\", \"\");\r\n            \r\n            return  friendUri === text || friendUri2 === text || friendUri3 === text || friendUri4 === text;\r\n        });\r\n\r\n        if (friends.length !== 0){\r\n            let index = this.props.user.getFriends().map((profile, index) => {\r\n                if(friends[0].getUri() === profile.getUri()){\r\n                    return index;\r\n                }\r\n            }).filter(index => {return index})\r\n\r\n            this.props.history.push(`/friend/${index[0]}`);\r\n        } else if(this.props.user.getWebId() === this.state.inputText){\r\n            this.props.history.push(\"/profile\");\r\n        }else{\r\n            try{\r\n                let result = await this.props.solidCommunicator.getUserFile(this.state.inputText);\r\n                \r\n                    this.props.history.push({\r\n                        pathname:\"/user\",\r\n                        state:{\r\n                            result: result\r\n                        }\r\n                    });\r\n            }catch(e){\r\n                this.setState({error : e.message})\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let friends = this.props.user.getFriends();\r\n        friends = friends.filter(friend => {\r\n            let text = this.state.inputText.toUpperCase();\r\n            if(friend.getName()){\r\n                return friend.getName().toUpperCase().includes(text) || friend.getUri().toUpperCase().includes(text);\r\n            }\r\n\r\n            return friend.getUri().toUpperCase().includes(text);\r\n        });\r\n        \r\n        let friendsElements = friends.map((friend, index) => {\r\n            return <li key = {friend.getUri()}>\r\n                <Link  to= {`/friend/${index}`}>\r\n                    <p>\r\n                        {friend.getName() ? friend.getName() : friend.getUri()}\r\n                    </p>\r\n                </Link>\r\n            </li> \r\n        });\r\n\r\n\r\n        return(\r\n            <section className = \"friends\">\r\n                <div className = \"searchFriends\">\r\n                    <h3>\r\n                        Make new friends\r\n                    </h3>\r\n                    <br/>\r\n                    <input type = \"text\" placeholder =\"profilecard link\" value = {this.state.inputText} onChange = {this.onChange}></input>\r\n                    <button onClick = {this.onButtonClick}>Search on the web</button>\r\n                    <p style = {{color: \"red\"}}>{this.state.error}</p>\r\n                </div>\r\n\r\n                <div className = \"friendSection\">\r\n                    <h3>\r\n                        Friends\r\n                    </h3>\r\n                    <ul >\r\n                        {friendsElements}\r\n                    </ul>\r\n                </div>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Friends;\r\n","import React from \"react\";\r\nimport \"../css/BeerCheckInComponent.scss\"\r\n\r\nclass BeerCheckInComponent extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n    }\r\n\r\n    render() {\r\n        let checkIn = this.props.checkin;\r\n        let rating;\r\n        let review;\r\n\r\n        if(checkIn._rating){\r\n            rating = <p>rating: {checkIn._rating}</p>\r\n        }\r\n\r\n        if(checkIn._review){\r\n            review = <p>review: {checkIn._review}</p>\r\n        }\r\n\r\n        return (\r\n            <li className= \"BeerCheckInComponent\">\r\n                <h5>\r\n                    {checkIn._userName ? checkIn._userName : checkIn._userWebId} is drinking a {checkIn._beerName}\r\n                </h5>\r\n                {rating}\r\n                {review}\r\n            </li>)\r\n    }\r\n}\r\n\r\nexport default BeerCheckInComponent;","import React from 'react';\r\nimport '../css/Profile.scss'\r\nimport profilePic from '../../assets/profilePic.png'\r\nimport {Link} from \"react-router-dom\";\r\nimport BeerCheckInComponent from \"../../component/BeerCheckInComponent\";\r\n\r\nclass FriendPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            user : this.props.user.getFriendFromIndex(this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.state.user.unsubscribe(this);\r\n        this.state.user.subscribe(this);\r\n    }\r\n\r\n    render(){\r\n        let user = this.state.user;\r\n        let imgUrl = user.getImageUrl();\r\n        let userCheckIns = user.getUserCheckIns()\r\n\r\n        userCheckIns = userCheckIns.map(checkIn => {\r\n            return (\r\n                <BeerCheckInComponent key = {checkIn._fileLocation} checkin = {checkIn}/>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <section className = \"profileScreen\">\r\n                \r\n                <div className=\"row\">\r\n                    <div className=\"leftColum\">\r\n                    <h1>\r\n                            {user.getName()}\r\n                        </h1>\r\n                            {/*TODO make image load faster*/}\r\n                            <img src = {imgUrl ? imgUrl : profilePic} alt = \"\"/>\r\n                        <p>\r\n                            check-ins : {user.getCheckIns()}\r\n                        </p>\r\n                        <p>\r\n                            reviews : {user.getBeerReviews()}\r\n                        </p>\r\n                        <p>\r\n                        Begin date : {dateToString(user.getStartDate())}\r\n                        </p>\r\n                        <p>\r\n                            beerbonus points : {user.getPoints()}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"column\">\r\n\r\n                        <h1>\r\n                            Recent activities\r\n                        </h1>\r\n                        <ul>\r\n                            {userCheckIns}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n} \r\n\r\nfunction dateToString(date){\r\n    var dd = String(date.getDate()).padStart(2, '0');\r\n    var mm = String(date.getMonth() + 1).padStart(2, '0');\r\n    var yyyy = date.getFullYear();\r\n\r\n    return dd + '/' + mm + '/' + yyyy; \r\n}\r\n\r\nexport default FriendPage;","import React from 'react';\r\nimport '../css/CheckIns.scss'\r\n\r\nclass Friends extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getAllCheckIns();\r\n    }\r\n\r\n    getAllCheckIns = () => {\r\n        //this.props.solidCommunicator.getAllCheckIns(url);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <section id = \"beerCheckIns\">\r\n                <h1>\r\n                    Check-Ins\r\n                </h1>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Friends;\r\n","import React from 'react';\r\nimport '../css/BeerResults.scss';\r\nimport { Link, Redirect} from \"react-router-dom\";\r\n\r\nclass BeerResults extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            beers: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() { \r\n        this.props.solidCommunicator.fetchBeerData().then(res => {\r\n            if(res){\r\n                this.setState({\r\n                    beers : res\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let elements = this.state.beers.map(listItem => {\r\n            return (\r\n                <li key = {listItem._location}>\r\n                    <Link to={{\r\n                        pathname: `/beer/${listItem._name}`,\r\n                        state: {\r\n                            beer : listItem\r\n                        }\r\n                    }} onClick={this.props.onLinkClick}>\r\n                    {listItem._name}\r\n                    </Link>\r\n                </li>\r\n            )\r\n        })\r\n\r\n\r\n        return (\r\n            <section className = \"beerResults\">\r\n                <h1>Beer Results</h1>\r\n                <ul>\r\n                    {elements}\r\n                </ul>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BeerResults;\r\n\r\n","import React from 'react';\r\nimport '../css/Profile.scss'\r\nimport profilePic from '../../assets/profilePic.png'\r\nimport BeerCheckInComponent from \"../../component/BeerCheckInComponent\";\r\nimport {Link, Redirect, withRouter} from \"react-router-dom\";\r\nimport TransitionGroup from 'react-transition-group/TransitionGroup';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nclass Profile extends React.Component{\r\n    render(){\r\n        let user = this.props.user;\r\n        let imgUrl = user.getImageUrl();\r\n        let userCheckIns = user.getUserCheckIns()\r\n\r\n        userCheckIns = userCheckIns.map(checkIn => {\r\n            return (\r\n                <Fade key = {checkIn._fileLocation}>\r\n                    <BeerCheckInComponent  checkin = {checkIn}/>\r\n                </Fade>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <section className = \"profileScreen\">\r\n                \r\n                <div className=\"row\">\r\n                    <div className=\"leftColum\">\r\n                        <h1>\r\n                            {user.getName()}\r\n                        </h1>\r\n                            {/*TODO make image load faster*/}\r\n                            <img src = {imgUrl ? imgUrl : profilePic} alt = \"\"/>\r\n                        <p>\r\n                            check-ins : {user.getCheckIns()}\r\n                        </p>\r\n                        <p>\r\n                            reviews : {user.getBeerReviews()}\r\n                        </p>\r\n                        <p>\r\n                            Begin date : {dateToString(user.getBeginDate())}\r\n                        </p>\r\n                        <p>\r\n                            beerbonus points : {user.getBeerPoints()}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className = \"checkinDiv\">\r\n                            <Link to=\"/checkIns\">All check ins &rarr;</Link>\r\n                        </div>\r\n                        <h1>\r\n                            Recent activities\r\n                        </h1>\r\n                        <TransitionGroup>\r\n                            <ul>\r\n                                {userCheckIns}\r\n                            </ul>\r\n                        </TransitionGroup>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction dateToString(date){\r\n    var dd = String(date.getDate()).padStart(2, '0');\r\n    var mm = String(date.getMonth() + 1).padStart(2, '0');\r\n    var yyyy = date.getFullYear();\r\n\r\n    return dd + '/' + mm + '/' + yyyy;\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport '../css/User.scss'\r\nimport profilePic from '../../assets/profilePic.png';\r\n\r\nclass User extends React.Component{ \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            clicked: false\r\n        }\r\n    }\r\n\r\n    onNotJoinedButtonClick = async () => {\r\n        let result = this.props.location.state.result;\r\n        await this.props.solidCommunicator.inviteUserToSolib(result.url, result.inbox);\r\n\r\n        this.setState(\r\n            {\r\n                clicked : true}\r\n            );  \r\n    }\r\n\r\n    sendFriendShipRequest = async () => {\r\n        //TODO check if friendship request is already set\r\n        let result = this.props.location.state.result;\r\n        await this.props.solidCommunicator.sendFriendshipRequest(result.url, result.appLocation);\r\n\r\n        this.setState(\r\n            {\r\n                clicked : true}\r\n            );  \r\n    }\r\n\r\n    render(){\r\n        let result = this.props.location.state.result;\r\n        let button;\r\n\r\n        if(!this.state.clicked){\r\n            if(result.appLocation){\r\n                button = (<button onClick = {this.sendFriendShipRequest}>Send friendship request</button>);\r\n            }else{\r\n                button = (<button onClick = {this.onNotJoinedButtonClick}>Invite to Social linked beer</button>);\r\n            }\r\n        }else{\r\n            button = (<button disabled= {true}>Request send</button>)\r\n        }\r\n\r\n        return(\r\n            <section className = \"userPageNew\">\r\n                <div className = \"userPageHead\">              \r\n                    <h1>\r\n                        {result.name}\r\n                    </h1>\r\n                    <img src = {result.imageUrl ? result.imageUrl : profilePic} alt = \"\"/>\r\n                </div>\r\n                <div className = \"userButtonDiv\">\r\n                    {button}\r\n                </div>\r\n                <div className = \"userInfo\">\r\n                    <p>Uri : {result.url}</p>\r\n                    <p>Has social linked beer account?: {result.appLocation ? \"Yes\" : \"No\"}</p>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport \"../css/Inbox.scss\";\r\n\r\nclass Inbox extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            messages : []\r\n        }\r\n    }\r\n\r\n    declineFriendShipRequest = async (index, message) => {\r\n        let array = this.state.messages;\r\n        array.splice(index, 1);\r\n        this.setState({messages: array})\r\n\r\n        await this.props.solidCommunicator.declineFriendSchipRequest(message);\r\n    }\r\n\r\n    acceptFriendShipRequest = async (index, message) => {\r\n        let array = this.state.messages;\r\n        array.splice(index, 1);\r\n        this.setState({messages: array})\r\n\r\n        await this.props.solidCommunicator.acceptFriendSchipRequest(message);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.solidCommunicator.getInboxContents().then(res => {\r\n            this.setState({messages : res})\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let items = this.state.messages.map((message, index)=> {\r\n            let buttonDiv;\r\n            \r\n            if(message.type === \"FriendshipRequest\"){\r\n                buttonDiv = (<div className = \"buttonDiv\">\r\n                    <button onClick = {() => this.declineFriendShipRequest(index,message)}>Decline</button>\r\n                    <button onClick = {() => this.acceptFriendShipRequest(index, message)}>Accept</button>\r\n                </div>)\r\n            }\r\n\r\n            return (<li key = {message.url}>\r\n                <h4>{message.type}</h4>\r\n                <p>from : {message.from}</p>\r\n                <p>{message.description}</p>\r\n                {buttonDiv}\r\n            </li>)\r\n        })\r\n\r\n        return(\r\n            <section className = \"inbox\">\r\n                <h1>\r\n                    Inbox\r\n                </h1>\r\n\r\n                <ul>\r\n                    {items}\r\n                </ul>\r\n                \r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Inbox;\r\n","import React from 'react';\r\nimport '../css/BeerCheckInScreen.scss';\r\n\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nclass BeerCheckInOverlay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onDivClick = (e) => {\r\n        e.stopPropagation();\r\n    }\r\n    \r\n    render() {\r\n        let rating;\r\n        let text;\r\n\r\n        if (this.props.addReview) {\r\n            rating = (<Rating\r\n                name=\"beerRating\"\r\n                value={this.props.beerRating}\r\n                precision={0.5}\r\n                onChange={(event, newValue) => {\r\n                    this.props.setBeerRating(newValue);\r\n                }}\r\n                />\r\n            )\r\n\r\n            text = (\r\n                <textarea\r\n                    value={this.props.beerReview}\r\n                    onChange={event => {\r\n                        this.props.onBeerReviewChange(event.target.value)\r\n                    }\r\n                    }/>\r\n\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div onClick={this.props.onOverLayCancelClick} id=\"overlay\" style={this.props.overlay ? { display: \"block\" } : { display: \"none\" }}>\r\n                <div id=\"text\" onClick={this.onDivClick}>\r\n                    <h5>\r\n                        check in beer\r\n                    </h5>\r\n                    <button onClick = {this.props.onAddReviewClick}>{this.props.addReview ? \"dont add review\": \"Add review\"}</button>\r\n                    {rating}\r\n                    {text}\r\n                    <br />\r\n                    <button onClick = {this.props.checkInBeer}>check in beer</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BeerCheckInOverlay;","import React from 'react';\r\nimport '../css/BeerDetailScreen.scss';\r\nimport BeerCheckInOverlay from '../../component/BeerCheckInOverlay';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\n\r\nclass BeerDetailScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            beer: this.props.location.state.beer,\r\n            overlay : false,\r\n            beerReview : \"\",\r\n            beerRating : 2.5,\r\n            addReview: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.solidCommunicator.fetchBeer(this.state.beer._location, this.state.beer).then(res => {\r\n            this.setState({\r\n                beer: res\r\n            })\r\n        });\r\n    }\r\n\r\n    onPostBeerReview = async () => {\r\n        await this.props.solidCommunicator.postBeerReview(this.state.addReview, this.state.beer, this.state.addReview ? this.state.beerRating : undefined, this.state.beerReview);\r\n\r\n        this.setState({\r\n            overlay: false\r\n        })\r\n    }\r\n\r\n    onCheckInClick= () => {\r\n        this.setState({\r\n            overlay : true\r\n        });\r\n    }\r\n\r\n    onOverLayCancelClick= () => {\r\n        this.setState({\r\n            overlay : false\r\n        });\r\n    }\r\n\r\n    setBeerRating = (rating) => {\r\n        this.setState({\r\n            beerRating : rating\r\n        });\r\n    }\r\n\r\n    onBeerReviewChange = (text) => {\r\n        this.setState({\r\n            beerReview : text\r\n        });\r\n    }\r\n    \r\n    onAddReviewClick = () => {\r\n        this.setState({\r\n            addReview: !this.state.addReview\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let beer = this.state.beer;\r\n        let brewerName = beer._brewer.replace(\"https://\", \"\").replace(/\\..*/, \"\");\r\n\r\n        return (\r\n            <section className=\"beerDetailScreen\">\r\n                <h1>\r\n                    {beer._name}\r\n                </h1>\r\n                <p>\r\n                    {beer._description}\r\n                </p>\r\n                <div>\r\n                    <button onClick= {this.onCheckInClick}>Check in beer</button>\r\n                </div>\r\n                <p>\r\n                    <Link to={{\r\n                        pathname: `/brewer/${brewerName}`,\r\n                        state: {\r\n                            brewer : beer._brewer\r\n                        }\r\n                    }}>\r\n                        brewer\r\n                    </Link>\r\n                </p>\r\n                <p>\r\n                    containers: {beer._containers}\r\n                </p>\r\n\r\n                <BeerCheckInOverlay\r\n                 overlay = {this.state.overlay}\r\n                 beerReview = {this.state.beerReview}\r\n                 beerRating = {this.state.beerRating}\r\n                 onOverLayCancelClick = {this.onOverLayCancelClick}\r\n                 setBeerRating = {this.setBeerRating}\r\n                 beerReview = {this.state.beerReview}\r\n                 onBeerReviewChange = {this.onBeerReviewChange}\r\n                 onAddReviewClick = {this.onAddReviewClick}\r\n                 addReview = {this.state.addReview}\r\n                 checkInBeer = {this.onPostBeerReview}\r\n                />\r\n                \r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BeerDetailScreen;\r\n","import React from \"react\";\r\nimport \"../css/BrewerPage.scss\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass BrewerPage extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            brewer: undefined,\r\n            brewerId: this.props.location.state.brewer\r\n        }\r\n\r\n        this.mounted = false;\r\n\r\n        this.getBrewer();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n\r\n        if (this.brewer) {\r\n            this.brewer.unsubscribe(this);\r\n            this.brewer.subscribe(this);\r\n\r\n            this.setState({\r\n                brewer: this.brewer\r\n            })\r\n        }\r\n    }\r\n\r\n    getBrewer = () => {\r\n        this.props.solidCommunicator.getBrewerInformation(this.state.brewerId).then(res => {\r\n            if (this.mounted) {\r\n                res.unsubscribe(this);\r\n                res.subscribe(this);\r\n\r\n                this.setState({\r\n                    brewer: res\r\n                })\r\n            } else {\r\n                this.brewer = res;\r\n            }\r\n        })\r\n    }\r\n\r\n    update = () => {\r\n        this.setState({\r\n                brewer: this.state.brewer\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let section;\r\n        let brewer = this.state.brewer;\r\n        let beers;\r\n\r\n        if (brewer) {\r\n            section = (\r\n                <div>\r\n                    <h1>\r\n                        {this.state.brewer._name}\r\n                    </h1>\r\n                    <p>{brewer._groep}</p>\r\n                    <p>{brewer._opgericht}</p>\r\n                    <p>{brewer._owners.join(\", \")}</p>\r\n                    <p>{brewer._provincie}</p>\r\n                    <p>{brewer._email}</p>\r\n                    <p>{brewer._taxid}</p>\r\n                    <p>{brewer._telephone}</p>\r\n                    <p>{brewer._url}</p>\r\n                    <p>{brewer._postalcode}</p>\r\n                    <p>{brewer._streetAdress}</p>\r\n                    <p>{brewer._addressRegion}</p>\r\n                    <p>{brewer._addressLocality}</p>\r\n                </div>\r\n            )\r\n\r\n            if (brewer._beers) {\r\n                beers = brewer._beers.map(listItem => {\r\n                    return ( <li key = {listItem._location}>\r\n                            <Link to={{\r\n                                pathname: `/beer/${listItem._name}`,\r\n                                state: {\r\n                                    beer : listItem\r\n                                }\r\n                            }} onClick={this.props.onLinkClick}>\r\n                                {listItem._name}\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        }\r\n\r\n        return (\r\n            <section className=\"brewerPage\">\r\n                {section}\r\n\r\n                <br/>\r\n                <br/>\r\n\r\n                <h3>Beers</h3>\r\n                <ul>\r\n                    {beers}\r\n                </ul>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BrewerPage;","import React from 'react';\r\n\r\nimport {Switch, Route, withRouter, Redirect} from \"react-router-dom\";\r\n\r\n\r\n/**\r\n * Imported Pages\r\n */\r\nimport Home from './page/Home'\r\nimport LogIn from './page/LogIn'\r\nimport Groups from './page/Groups';\r\nimport Friends from './page/Friends';\r\nimport FriendsPage from './page/FriendPage';\r\nimport CheckIns from './page/CheckIns';\r\nimport BeerResults from './page/BeerResults';\r\nimport Profile from './page/Profile';\r\nimport UserPage from './page/User';\r\nimport Inbox from './page/Inbox';\r\nimport BeerDetailScreen from './page/BeerDetailScreen';\r\nimport BrewerPage from './page/BrewerPage';\r\n\r\n\r\nclass AppRoutes extends React.Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home} isLoggedIn={this.props.loggedIn}\r\n                       solidCommunicator={this.props.solidCommunicator}/>\r\n                <PrivateRoute path=\"/user\" component={UserPage} isLoggedIn={this.props.loggedIn}\r\n                              solidCommunicator={this.props.solidCommunicator}/>\r\n                <PrivateRoute path=\"/beer/:id\" component={BeerDetailScreen} isLoggedIn={this.props.loggedIn}\r\n                              solidCommunicator={this.props.solidCommunicator}/>\r\n                <PrivateRoute path=\"/brewer/:id\" component={BrewerPage} isLoggedIn={this.props.loggedIn}\r\n                              solidCommunicator={this.props.solidCommunicator}/>\r\n                <PrivateRoute exact path=\"/friend\" component={Friends} isLoggedIn={this.props.loggedIn}\r\n                              user={this.props.userObject} solidCommunicator={this.props.solidCommunicator}/>\r\n                <PrivateRoute path=\"/friend/:id\" component={FriendsPage} isLoggedIn={this.props.loggedIn}\r\n                              user={this.props.userObject}/>\r\n                <PrivateRoute path=\"/beerresults\" component={BeerResults} isLoggedIn={this.props.loggedIn}\r\n                              onLinkClick={this.props.clearSearchQuery}\r\n                              solidCommunicator={this.props.solidCommunicator}/>\r\n                <PrivateRoute path=\"/groups\" component={Groups} isLoggedIn={this.props.loggedIn}/>\r\n                <PrivateRoute path='/profile' component={Profile} isLoggedIn={this.props.loggedIn}\r\n                              user={this.props.userObject}/>\r\n                <PrivateRoute path='/checkIns' component={CheckIns} isLoggedIn={this.props.loggedIn}\r\n                              solidCommunicator={this.props.solidCommunicator} user={this.props.userObject}/>\r\n                <PrivateRoute path='/inbox' component={Inbox} isLoggedIn={this.props.loggedIn}\r\n                              solidCommunicator={this.props.solidCommunicator}/>\r\n                <PrivateRouteLogIn path=\"/login\" component={LogIn} isLoggedIn={this.props.loggedIn}\r\n                                   onLoggedIn={this.props.onLoggedIn}/>\r\n            </Switch>)\r\n    }\r\n}\r\n\r\nconst PrivateRoute = ({component: Component, isLoggedIn, ...rest}) => (\r\n    <Route {...rest} render={(props) => (\r\n        isLoggedIn\r\n            ? <Component {...props} {...rest}/>\r\n            : <Redirect to='/'/>\r\n    )}/>\r\n)\r\n\r\nconst PrivateRouteLogIn = ({component: Component, isLoggedIn, onLoggedIn, ...rest}) => (\r\n    <Route {...rest} render={(props) => (\r\n        !isLoggedIn\r\n            ? <Component onLoggedIn={onLoggedIn} {...props} />\r\n            : <Redirect to='/profile'/>\r\n    )}/>\r\n)\r\n\r\nexport default withRouter(AppRoutes);","import React from 'react';\r\nimport '../css/AclErrorPage.scss';\r\n\r\nclass AclErrorPage extends React.Component{\r\n    render(){\r\n        //TODO geef detailed instuctie om het op te lossen.\r\n\r\n        return (<section className = \"aclErrorPage\">\r\n            <h1>\r\n             The application does not have correct access. please give the application read, write, append and control access. \r\n            </h1>\r\n        </section>)\r\n    }\r\n}\r\n\r\nexport default AclErrorPage;","import React from 'react';\r\nimport '../css/FetchingPage.scss';\r\n\r\nclass FetchingPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <section className= \"rendering\">\r\n                <h1>Fetching data</h1>\r\n                <div id=\"fetchinAnimation\"></div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FetchingPage;","class User {\r\n    constructor(uri){\r\n        this._uri = uri\r\n\r\n        this._name =  this.getUserName(uri);\r\n        this._imageUrl = undefined;\r\n        this._beginDate = undefined;\r\n        this._beerPoints = 0;\r\n        this._checkIns = 0;\r\n        this._beerReviews = 0;\r\n        this._friends = [];\r\n        this._applicationLocation = undefined;\r\n        this._userCheckIns = [];\r\n\r\n        //mvc\r\n        this._subscribers = [];\r\n    }\r\n\r\n    setBeerReviews(beerReviews){\r\n        this._beerReviews = beerReviews;\r\n        this.upDateSubScribers()\r\n    }\r\n\r\n    setCheckIns(checkIns){\r\n        this._checkIns = checkIns;\r\n        this.upDateSubScribers()\r\n\r\n    }\r\n\r\n    getCheckIns(){\r\n        return this._checkIns;\r\n    }\r\n\r\n    getBeerReviews(){\r\n        return this._beerReviews;\r\n    }\r\n\r\n    addCheckIn(){\r\n        this._checkIns++;\r\n        this.upDateSubScribers()\r\n\r\n    }\r\n\r\n    addBeerReviews(){\r\n        this._beerReviews++;\r\n        this.upDateSubScribers()\r\n\r\n    }\r\n\r\n    addBeerPoints(amount){\r\n        this._beerPoints += amount;\r\n        this.upDateSubScribers();\r\n    }\r\n\r\n    getUserName(uri){\r\n        return  uri.replace(\"https://\", \"\").replace(/\\..*/, \"\");\r\n    }\r\n\r\n    upDateSubScribers(){\r\n        this._subscribers.map(subscriber => subscriber.update());\r\n    }\r\n\r\n    subscribe(subscriber){\r\n        this._subscribers.push(subscriber);\r\n    } \r\n\r\n    unsubscribe(subscriber){\r\n        this._subscribers.filter(subscriberList  => {\r\n            return subscriberList !== subscriber;\r\n        });\r\n    }\r\n\r\n    addFriends(newFriends){\r\n        this._friends = this._friends.concat(newFriends)\r\n        this.upDateSubScribers();\r\n    }\r\n\r\n    addFriend(newFriend){\r\n        this._friends.push(newFriend);\r\n        this.upDateSubScribers();\r\n    }\r\n\r\n    setName(name){\r\n        if(name){\r\n            this._name = name;\r\n        }\r\n    }\r\n\r\n    setImageUrl(imageUrl){\r\n        this._imageUrl = imageUrl;\r\n    }\r\n\r\n    setBeerPoints(beerPoints){\r\n        this._beerPoints = beerPoints;\r\n        this.upDateSubScribers();\r\n    }\r\n\r\n    setBeginDate(beginDate){\r\n        this._beginDate = beginDate;\r\n        this.upDateSubScribers();\r\n    }\r\n\r\n    setApplicationLocation(applicationLocation){\r\n        this._applicationLocation = applicationLocation;\r\n        this.upDateSubScribers();\r\n    }\r\n\r\n    addUserCheckIns(userCheckins){\r\n        this._userCheckIns = userCheckins.concat(this._userCheckIns);\r\n        this.upDateSubScribers();\r\n    }\r\n\r\n    getUserCheckIns(){\r\n        return this._userCheckIns;\r\n    }\r\n\r\n    getWebId(){\r\n        return this._uri;\r\n    }\r\n\r\n    getFriends(){\r\n        return this._friends;\r\n    }\r\n\r\n    getFriendFromIndex(index){\r\n        return this._friends[index];\r\n    }\r\n\r\n    getBeginDate(){\r\n        return new Date(this._beginDate.getTime());\r\n    }\r\n\r\n    getImageUrl(){\r\n        return this._imageUrl;\r\n    }\r\n\r\n    getName(){\r\n        return this._name;\r\n    }\r\n\r\n    getBeerPoints(){\r\n        return this._beerPoints;\r\n    }\r\n\r\n    getApplicationLocation(){\r\n        return this._applicationLocation;\r\n    }\r\n}\r\n\r\nexport default User;","/**\n * Libs\n */\nimport React from 'react';\nimport solidAuth from 'solid-auth-client'\nimport { Link, withRouter } from \"react-router-dom\";\nimport SolidCommunicator from './solid/SolidCommunicator'\n\n\n/**\n * Components\n */\nimport NavBar from './component/NavBar';\nimport AppRoutes from './routes/AppRoutes'\nimport AclErrorPage from './routes/extrapage/AclErrorPage'\nimport FetchingPage from './routes/extrapage/FetchingPage'\n\n/**\n * Errors\n */\nimport AccessError from './error/AccessError'\n\n/**\n * Assests\n */\nimport './css/App.scss';\nimport Knipsel from './assets/Knipsel.png'\nimport Logo from './assets/logo.png'\nimport User from './model/User';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n      searchQuery: '',\n      userObject: undefined,\n      solidCommunicator: undefined,\n      accessError: false,\n      fetchingFiles: false\n    }\n  }\n\n  componentDidMount() {\n    this.checkLoggedIn();\n  }\n\n  update = () => {\n    this.setState({\n      update: true\n    })\n  }\n\n  clearSearchQuery = () => {\n    this.setState({\n      searchQuery: ''\n    })\n  }\n\n  checkLoggedIn = async () => {\n    let session = await solidAuth.currentSession();\n    //TODO error handling\n\n    if (session) {\n      this.setState({\n        fetchingFiles: true\n      });\n\n      //make new user\n      let user = new User(session.webId);\n      user.subscribe(this);\n\n      try {\n        let solidCommunicator = await SolidCommunicator.build(user);\n\n        this.setState({\n          userObject: user,\n          solidCommunicator: solidCommunicator,\n          loggedIn: true,\n          fetchingFiles: false\n        })\n\n        this.props.history.push(`/profile`)\n      } catch (e) {\n        if (e instanceof AccessError) {\n          this.setState({\n            accessError: true,\n            fetchingFiles: false\n          })\n        } else {\n          throw e; // let others bubble up\n        }\n      }\n    }\n  }\n\n\n  onClickLogOut = () => {\n    solidAuth.logout();\n\n    this.setState({\n      loggedIn: false,\n      userObject: undefined,\n      accessError : false\n    });\n  }\n\n  onLoggedIn = () => {\n    this.checkLoggedIn();\n  }\n\n  onBeerSearch = (text) => {\n    let location = this.props.location.pathname;\n\n    this.setState({\n      searchQuery: text\n    })\n\n    if (text) {\n      if (location !== \"/beerresults\") {\n        this.props.history.push(\"/beerresults\");\n      }\n\n      /**\n       * Vindt hier de bier\n       */\n    } else {\n      this.props.history.goBack();\n    }\n  }\n\n\n  render() {\n    let navBar;\n    let app;\n\n    if(this.state.fetchingFiles){\n      navBar = (\n        <NavBar onSearchBarButtonClick={this.onSearchBarButtonClick}>\n          <Link to=\"/\" onClick={this.onClickLogOut}></Link>\n        </NavBar>)\n    }else if(this.state.accessError){\n      navBar = (\n        <NavBar onSearchBarButtonClick={this.onSearchBarButtonClick}>\n          <Link to=\"/\" onClick={this.onClickLogOut}>Log out</Link>\n        </NavBar>)\n    } else if (this.state.loggedIn) {\n      navBar = (\n        <NavBar onSearchBarButtonClick={this.onSearchBarButtonClick}\n          onBeerSearch={this.onBeerSearch}\n          loggedIn={this.state.loggedIn}\n          searchQuery={this.state.searchQuery}>\n          <Link to=\"/profile\">Profile</Link>\n          <Link to=\"/friend\">Friends</Link>\n          <Link to=\"/groups\">Groups</Link>\n          <Link to=\"/inbox\">Inbox</Link>\n          <Link to=\"/\" onClick={this.onClickLogOut}>Log out</Link>\n        </NavBar>\n      )\n    } else {\n      navBar = (\n        <NavBar onBeerSearch={this.onBeerSearch} loggedIn={this.state.loggedIn}>\n          <Link to=\"/LogIn\">Log in</Link>\n        </NavBar>\n      )\n    }\n\n    if(this.state.fetchingFiles){\n      app = (<FetchingPage/>);\n    }else if (this.state.accessError) {\n      app = (<AclErrorPage/>);  \n    } else {\n      app = (<AppRoutes\n        loggedIn={this.state.loggedIn}\n        userObject={this.state.userObject}\n        solidCommunicator={this.state.solidCommunicator}\n        clearSearchQuery={this.clearSearchQuery}\n        onLoggedIn={this.onLoggedIn}\n      />)\n    }\n\n    return (\n      <div id=\"AppRoot\">\n        <header>\n          <Link to=\"/\">\n            <div>\n              <img src={Logo} alt=\"\" />\n              <h1>\n                Linked social beer\n              </h1>\n            </div>\n          </Link>\n        </header>\n\n        {navBar}\n        {app}\n        <footer>\n          <span>\n            This application is powered by\n            </span>\n          <a href=\"https://solid.inrupt.com\">\n            <img alt=\"Solid inrupt\" src={Knipsel} />\n          </a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n <HashRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profilePic.b6681619.png\";"],"sourceRoot":""}